<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.pmpheep.back.commuser.community.dao.CommunityDao">
<resultMap type="java.util.Map" id="baseMap"></resultMap>
     <!--查询公告列表  --> 
     <select id="queryNoticeList" parameterType="map" resultMap="baseMap">
        select 
		    t.*
			,b.material_name
			
		        from cms_content t
		        left join  material b on t.material_id =b.id 
		        left join material_org u on b.id=u.material_id
		        left join writer_user p on p.org_id=u.org_id
		        where  t.category_id=3
		        
		        and t.is_published=1
		        and t.material_id >0
		        
		        and t.auth_status=2
		        and t.is_deleted=0 

			and 
			(b.id is null
				or
				b.is_public = 1
				or
		        ( p.id=  2
			and b.is_public = 0))
			group by t.id
		        
            <if test="searchText !=null" >
              where n.title like #{searchText}
            </if>
	            
			order by t.gmt_create desc 
			limit #{startnum},#{size}
         
          <!-- select n.* from 
		(select 
		        t.*
		        ,b.material_name
		        from cms_content t
		        left join  material b on t.material_id =b.id 
		        where  t.category_id=3 
		        and t.material_id is not null 
		        and t.is_published=1
		        <![CDATA[and t.material_id >0]]>
                and b.is_public = 1
		        and t.auth_status=2
		        and t.is_deleted=0
		 union
		 select 
		        t.*
		        ,b.material_name
		        from cms_content t
		        left join  material b on t.material_id =b.id 
		        left join material_org u on b.id=u.material_id
		        left join writer_user p on p.org_id=u.org_id
		        where  t.category_id=3
		        and t.material_id is not null 
		        and t.is_published=1
		        <![CDATA[and t.material_id >0]]>
		        and b.is_public = 0
		        and t.auth_status=2
		        and t.is_deleted=0 
		        and p.id= #{id}) n
		        <if test="searchText !=null" >
	              where n.title like #{searchText}
	            </if>
			order by n.gmt_create desc limit #{startnum},#{size} -->
         
     </select>
     
     <!--id查询公告  -->
     <select id="queryNoticeById" parameterType="map" resultMap="baseMap">
        select * from cms_content  where id=#{Id}
     </select>
     
     <!--根据教材id查询社区主页快报列表  -->
     <select id="queryMaterialNoticeList"  parameterType="map" resultMap="baseMap">
        select 
             *  
        from  
            cms_content cc left join cms_category  ccg  on cc.category_id=ccg.id 
       where  
       		cc.material_id=#{materialId} and  cc.is_published=1  and cc.auth_status=2 and cc.is_deleted=0 
      order by 
            cc.gmt_create desc  
     limit 0,4
     </select>
     
     <!--根据教材id查询本套教材的图书  -->
     <select id="queryTextBookList" parameterType="map" resultMap="baseMap">

        select
           b.*
        from
        book b
        where
            b.material_id=#{materialId}
        order by
            b.sort
        limit 0,10
     </select>
     
     <!--查询社区主页精选书评  -->
     <select id="querySomeComment" parameterType="map" resultMap="baseMap">
			select buc.* ,b.bookname,wu.username,wu.avatar
			from   book_user_comment buc
				   left join writer_user wu on buc.writer_id=wu.id
				   left join book b on buc.book_id=b.id
			where
			 b.material_id=#{materialId}
			 and buc.is_hide=0
			 and buc.is_long=1
			 and buc.is_deleted=0
			 and buc.is_auth=1
	  ORDER BY
		 buc.score
	  limit #{startnum},#{size}
     </select>
     <!--查询社区主页精选书评的总数量  -->
     <select id="queryCommentCount" parameterType="map" resultType="int">
			select count(1)
			from   book_user_comment buc
			left join book b on buc.book_id=b.id
			where b.id=#{materialId}
			 and buc.is_hide=0
			 and buc.is_long=1
			 and buc.is_deleted=0
			 and buc.is_auth=1
     </select>
     <!--查询教材中书籍微视频  -->
     <select id="queryVidos" parameterType="map" resultType="java.util.Map">
         select
          bv.id, bv.title,bv.cover,bv.file_name,bv.gmt_create,bv.clicks
         from book_video bv
         left join book b on bv.book_id=b.id
         where b.material_id=#{materialId}
						and is_auth=1
         order by gmt_create
         limit #{startnum},#{size}
     </select>  
     <!-- 查询教材微中书籍微视频的总数 -->
     <select id="queryVidoCount" parameterType="map" resultType="int">
         select 
           count(1)
         from book_video bv 
         left join book b on bv.book_id=b.id
         where b.material_id=#{materialId} and is_auth=1
       
     </select>

	<!--id查询视频播放量  -->
	<select id="videoCount" parameterType="java.lang.String" resultType="java.util.Map">
		select * from book_video bv   where  id=#{vid}
	</select>

	<!-- 根据ID增加播放量 -->
	<update id="changeClicks" parameterType="java.util.Map">
		update book_video set
		clicks=clicks+1 where id=#{id}
	</update>
     
</mapper>