<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.commuser.textbook.dao.TextbookDao">

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="materialId != null">
				material_id,
			</if>
			<if test="textbookName != null and textbookName !='' ">
				textbook_name,
			</if>
			<if test="textbookRound != null ">
				textbook_round,
			</if>
			<if test="planningEditor != null">
				planning_editor,
			</if>
			<if test="isChiefChosen != null ">
				is_chief_chosen,
			</if>
			<if test="isQualifierSelected != null ">
				is_qualifier_selected,
			</if>
			<if test="isListSelected != null ">
				is_list_selected,
			</if>
			<if test="isPlanningEditorConfirm != null ">
				is_planning_editor_confirm,
			</if>
			<if test="isProjectEditorConfirm != null ">
				is_project_editor_confirm,
			</if>
			<if test="isLocked != null   ">
				is_locked,
			</if>
			<if test="isPublished !=null">
				is_published,
			</if>
			<if test="gmtPublished != null">
				gmt_published,
			</if>
			<if test="revisionTimes != null ">
				revision_times,
			</if>
			<if test="republishTimes != null ">
				republish_times,
			</if>
			<if test="isbn != null and isbn !='' ">
				isbn,
			</if>
			<if test="sort != null ">
				sort,
			</if>
			<if test="founderId != null ">
				founder_id,
			</if>
			<if test="gmtCreate != null ">
				gmt_create,
			</if>
			<if test="gmtUpdate != null ">
				gmt_update
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="materialId != null">
				#{materialId},
			</if>
			<if test="textbookName != null and textbookName !=''  ">
				#{textbookName},
			</if>
			<if test="textbookRound != null">
				#{textbookRound},
			</if>
			<if test="planningEditor != null">
				#{planningEditor},
			</if>
			<if test="isChiefChosen != null ">
				#{isChiefChosen},
			</if>
			<if test="isQualifierSelected != null ">
				#{isQualifierSelected},
			</if>
			<if test="isListSelected != null ">
				#{isListSelected},
			</if>
			<if test="isPlanningEditorConfirm != null ">
				#{isPlanningEditorConfirm},
			</if>
			<if test="isProjectEditorConfirm != null ">
				#{isProjectEditorConfirm},
			</if>
			<if test="isLocked != null  ">
				#{isLocked},
			</if>
			<if test="isPublished != null">
				#{isPublished},
			</if>
			<if test="gmtPublished != null">
				#{gmtPublished},
			</if>
			<if test="revisionTimes != null ">
				#{revisionTimes},
			</if>
			<if test="republishTimes != null ">
				#{republishTimes},
			</if>
			<if test="isbn != null and isbn !='' ">
				#{isbn},
			</if>
			<if test="sort != null ">
				#{sort},
			</if>
			<if test="founderId != null">
				#{founderId},
			</if>
			<if test="gmtCreate != null ">
				#{gmtCreate},
			</if>
			<if test="gmtUpdate != null ">
				#{gmtUpdate}
			</if>
		</trim>
	</sql>

	<!-- 新增Textbook -->
	<insert id="addTextbook" parameterType="Textbook">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		<!-- sql片段对应字段名,id属性值任意 -->
		INSERT INTO textbook
		(
		<include refid="key" />
		)
		VALUES
		(
		<include refid="value" />
		);
	</insert>


	<!-- 根据id删除一个 -->
	<delete id="deleteTextbookById" parameterType="java.lang.Long">
		delete from
		textbook where
		id=#{id} ;
	</delete>

	<!-- 更新Textbook -->
	<update id="updateTextbook" parameterType="Textbook">
		update textbook
		<set>
			<if test="materialId != null">
				material_id = #{materialId},
			</if>
			<if test="textbookName != null and textbookName !='' ">
				textbook_name = #{textbookName},
			</if>
			<if test=" textbookRound != null">
				textbook_round= #{textbookRound},
			</if>
			<if test="planningEditor != null">
				planning_editor = #{planningEditor},
			</if>
			<if test="isChiefChosen != null ">
				is_chief_chosen = #{isChiefChosen},
			</if>
			<if test="isQualifierSelected != null ">
				is_qualifier_selected = #{isQualifierSelected},
			</if>
			<if test="isListSelected != null ">
				is_list_selected = #{isListSelected},
			</if>
			<if test="isPlanningEditorConfirm != null ">
				is_planning_editor_confirm = #{isPlanningEditorConfirm},
			</if>
			<if test="isProjectEditorConfirm != null ">
				is_project_editor_confirm = #{isProjectEditorConfirm},
			</if>
			<if test=" isLocked != null">
				is_locked= #{isLocked},
			</if>
			<if test=" isPublished != null">
				is_published = #{isPublished},
			</if>
			<if test=" gmtPublished != null">
				gmt_published = #{gmtPublished},
			</if>
			<if test="revisionTimes != null ">
				revision_times = #{revisionTimes},
			</if>
			<if test="republishTimes != null ">
				republish_times = #{republishTimes},
			</if>
			<if test=" isbn != null and  isbn != '' ">
				isbn= #{isbn},
			</if>
			<if test=" sort != null">
				sort = #{sort},
			</if>
			<if test=" founderId != null">
				founder_id = #{founderId},
			</if>
		</set>
		where
		id=#{id} ;
	</update>

	<!-- 根据id查询一个Textbook -->
	<select id="getTextbookById" parameterType="java.lang.Long"
		resultType="Textbook">
		select * from textbook where id=#{id} ;
	</select>
	
	<!-- 查询书籍列表 -->
	<select id="listPageTextbooks" parameterType="page" resultType="Textbook">
		select
			* 
		from 
			textbook tt
		where 
			1 = 1 
			<if test="object.textbookName !=null and object.textbookName !='' ">
			and
				tt.textbook_name LIKE CONCAT('%',#{object.textbookName},'%')
			</if>
		order by 
			tt.gmt_create desc
	</select>

	<!-- 通过用户id与教材id查询书籍集合 -->
	<select id="getTextbookByMaterialIdAndUserId" resultType="Textbook">
		select
		* from textbook
		where material_id = #{materialId} and planning_editor =
		#{userId};
	</select>

	<!-- 查询表单的数据总数 -->
	<select id="getTextbookCount" resultType="Long">
		select count(*)
		from
		textbook
	</select>

	<!-- 根据教材Id查询对应的书籍 -->
	<select id="getTextbookByMaterialId" parameterType="map"
		resultType="Textbook">
		select
		*
		from
		textbook tb
		where
		tb.`material_id`=#{materialId}
		order by tb.id desc;
	</select>

	<!-- 职位遴选界面书籍总条数 -->
	<select id="listBookPositionTotal" parameterType="PageParameter"
		resultType="java.lang.Integer">
		select count(*) from (
			select
			a.id
			from textbook a
			LEFT JOIN dec_position b on
			b.textbook_id=a.id
			LEFT JOIN (select * from declaration where
			is_deleted = 0 and is_staging =
			0 and online_progress !=2) c on c.id =
			b.declaration_id
			LEFT JOIN material d on d.id = a.material_id
			LEFT JOIN
			(select * from pmph_user where is_deleted =0 and is_disabled =0)
			planningEditor on planningEditor.id = a.planning_editor
			where
			d.is_deleted =0 and d.is_published =1
			and d.id =
			#{parameter.materialId}
			<if test="parameter.power == 4 and parameter.pmphUserId !=null ">
				and a.planning_editor = #{parameter.pmphUserId}
			</if>
			<if test="parameter.state !=null ">
				<if test="parameter.state == 1 ">
					and a.is_locked = 0
				</if>
				<if test="parameter.state == 2 ">
					and a.is_locked = 1
				</if>
				<if test="parameter.state == 3 ">
					and a.is_published =1
				</if>
				<if test="parameter.state == 4 ">
					and d.is_force_end =1
				</if>
			</if>
			<if test="parameter.list !=null ">
				and a.id in
				<foreach collection="parameter.list" item="item" index="index"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			GROUP BY a.id
		)temp
	</select>

	<!-- 职位遴选界面书籍分页列表 -->
	<select id="listBookPosition" parameterType="PageParameter"
		resultType="BookPositionVO">
		select d.id materialId,
		d.is_all_textbook_published
		isAllTextbookPublished,
		d.is_force_end isForceEnd,
		a.id textBookId,
		a.sort sort,
		a.textbook_name,
		a.textbook_round textbookRound,
		sum(IF(b.id is not null ,1,0))
		applyNum,
		a.planning_editor planningEditor,
		planningEditor.realname
		planningEditorName ,
		GROUP_CONCAT(IF(b.chosen_position in
		(2,3,4,5,6,7),c.realname,null) ORDER BY b.chosen_position,b.rank)
		editorsAndAssociateEditors,
		sum(IF(b.chosen_position in (2,3,4,5,6,7),1,0))
		editorsAndAssociateEditorsNum,
		GROUP_CONCAT(IF(b.chosen_position in (1,3,5,7)
		,c.realname,null) ORDER BY
		b.chosen_position,b.rank) bianWeis,
		sum(IF(b.chosen_position in (1,3,5,7),1,0)) bianWeisNum
		from textbook a
		LEFT
		JOIN dec_position b on b.textbook_id=a.id
		LEFT JOIN (select * from
		declaration where is_deleted = 0 and is_staging =
		0 and online_progress
		!=2) c on c.id = b.declaration_id
		LEFT JOIN material d on d.id =
		a.material_id
		LEFT JOIN (select * from pmph_user where is_deleted =0
		and is_disabled =0)
		planningEditor on planningEditor.id =
		a.planning_editor
		where d.is_deleted =0 and d.is_published =1
		and d.id =
		#{parameter.materialId}
		<if test="parameter.power == 4 and parameter.pmphUserId !=null ">
			and a.planning_editor = #{parameter.pmphUserId}
		</if>
		<if test="parameter.state !=null ">
			<if test="parameter.state == 1 ">
				and a.is_locked = 0
			</if>
			<if test="parameter.state == 2 ">
				and a.is_locked = 1
			</if>
			<if test="parameter.state == 3 ">
				and a.is_published =1
			</if>
			<if test="parameter.state == 4 ">
				and d.is_force_end =1
			</if>
		</if>
		<if test="parameter.list !=null ">
			and a.id in
			<foreach collection="parameter.list" item="item" index="index"
				open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		GROUP BY a.id ORDER BY a.sort
		<if test="start !=null and pageNumber != null">
			limit #{start},#{pageSize}
		</if>
	</select>
	<!-- 根据书籍id查询textbook -->
	<select id="getTextbooks" resultType="Textbook">
		select * from textbook
		where id in
		<foreach collection="array" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	<!-- 根据id进行名单确认 -->
	<update id="updateTextbooks" parameterType="list">
		update textbook
		set is_locked= true
		where id in
		<foreach item="item" collection="list" open="(" separator=","
			close=")">
			#{item.id}
		</foreach>
	</update>
	<!-- 根据id进行结果公布 -->
	<update id="updateBookPublished" parameterType="list">
		update textbook  
			set is_published= true
			where id in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item.id}
		</foreach>
	</update>
</mapper>
