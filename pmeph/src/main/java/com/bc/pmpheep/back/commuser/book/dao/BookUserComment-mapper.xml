<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.commuser.book.dao.BookUserCommentDao">
	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="id != null and id !=''">
				id,
			</if>
			<if test="bookId != null and bookId !=''">
				book_id
			</if>
			<if test=" writerId != null and writerId !=''">
				writer_id,
			</if>
			<if test="score != null and score !=''">
				score,
			</if>
			<if test="content != null and content !=''">
				content,
			</if>
			<if test=" isHide != null ">
				is_hide,
			</if>
			<if test="isAuth != null">
				is_auth,
			</if>
			<if test="authUserId != null and authUserId !=''">
				auth_user_id,
			</if>
			<if test=" authDate != null">
				auth_date,
			</if>
			<if test="isDeleted != null">
				is_deleted,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test=" gmtUpdate != null">
				gmt_update,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="id != null and id !=''">
				#{id} ,
			</if>
			<if test="bookId != null and bookId !=''">
				#{bookId} ,
			</if>
			<if test=" writerId != null and writerId !=''">
				#{writerId} ,
			</if>
			<if test="score != null and score !=''">
				#{score} ,
			</if>
			<if test="content != null and content !=''">
				#{content} ,
			</if>
			<if test=" isHide != null">
				#{isHide} ,
			</if>
			<if test="isAuth != null ">
				#{isAuth} ,
			</if>
			<if test="authUserId != null and authUserId !=''">
				#{authUserId} ,
			</if>
			<if test=" authDate != null">
				#{authDate} ,
			</if>
			<if test="isDeleted != null">
				#{isDeleted} ,
			</if>
			<if test="gmtCreate != null ">
				#{gmtCreate},
			</if>
			<if test=" gmtUpdate != null ">
				#{gmtUpdate},
			</if>
		</trim>
	</sql>
	<!-- 新增BookUserComment -->
	<insert id="addBookUserComment" parameterType="BookUserComment">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into book_user_comment (
		<include refid="key" />
		)
		values(
		<include refid="value" />
		) ;
	</insert>


	<!-- 根据id删除一个 -->
	<delete id="deleteBookUserComment" parameterType="java.lang.Long">
		delete from
		book_user_comment where
		id=#{id} ;
	</delete>

	<!-- 更新BookUserComment -->
	<update id="updateBookUserComment" parameterType="BookUserComment">
		update book_user_comment
		<set>
			<if test="id != null and id !=''">
				id= #{id} ,
			</if>
			<if test="bookId != null and bookId !=''">
				book_id = #{bookId} ,
			</if>
			<if test=" writerId != null and writerId !=''">
				writer_id =#{writerId} ,
			</if>
			<if test="score != null and score !=''">
				score = #{score} ,
			</if>
			<if test="content != null and content !=''">
				content= #{content} ,
			</if>
			<if test=" isHide != null ">
				is_hide = #{isHide} ,
			</if>
			<if test="isAuth != null">
				is_auth = #{isAuth} ,
			</if>
			<if test="authUserId != null and authUserId !=''">
				auth_user_id= #{authUserId} ,
			</if>
			<if test=" authDate != null ">
				auth_date= #{authDate} ,
			</if>
			<if test="isDeleted != null">
				is_deleted =#{isDeleted} ,
			</if>
			<if test="gmtCreate != null ">
				gmt_create=#{gmtCreate},
			</if>
			<if test=" gmtUpdate != null">
				gmt_update=#{gmtUpdate},
			</if>
		</set>
		where
		id=#{id} ;
	</update>

	<!-- 根据id查询一个BookUserComment -->
	<select id="getBookUserCommentById" parameterType="java.lang.Long"
		resultType="BookUserComment">
		select * from book_user_comment where id=#{id} ;
	</select>
	<!-- 分页查询图书评论 -->
	<select id="listBookUserComment" parameterType="PageParameter"
		resultType="BookUserCommentVO">
		SELECT
		c.*, b.bookname,
		b.isbn,
		u.realname writerName
		FROM
		book_user_comment c
		LEFT
		JOIN book b ON b.id = c.book_id
		LEFT JOIN
		writer_user u ON u.id =
		c.writer_id
		WHERE
		c.is_deleted = FALSE
		<if test="parameter.name != null and parameter.name != ''">
			and (b.bookname like concat("%",#{parameter.name},"%") or
			b.isbn like concat("%",#{parameter.name},"%"))
		</if>
		<if test="parameter.isAuth != null">
			and c.is_auth = #{parameter.isAuth}
		</if>
		LIMIT #{start},#{pageSize}
	</select>
	<!-- 查询评论总数 -->
	<select id="getBookUserCommentTotal" parameterType="PageParameter"
		resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
		book_user_comment c
		LEFT
		JOIN book b ON b.id =
		c.book_id
		LEFT JOIN
		writer_user u ON u.id =
		c.writer_id
		WHERE
		c.is_deleted =
		FALSE
		<if test="parameter.name != null and parameter.name != ''">
			and (b.bookname like concat("%",#{parameter.name},"%") or
			b.isbn like concat("%",#{parameter.name},"%"))
		</if>
		<if test="parameter.isAuth != null">
			and c.is_auth = #{parameter.isAuth}
		</if>

	</select>

	<!-- 根据书籍id删除 -->
	<delete id="deleteBookUserCommentByBookId" parameterType="java.lang.Long">
		delete
		from
		book_user_comment where
		book_id=#{bookId} ;
	</delete>
	<!-- 批量删除评论 -->
	<delete id="deleteBookUserCommentById">
		delete from
		book_user_comment where
		id in
		<foreach collection="array" index="index" item="id" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper>