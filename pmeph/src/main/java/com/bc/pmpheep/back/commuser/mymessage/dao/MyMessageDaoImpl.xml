<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.commuser.mymessage.dao.MyMessageDao">

	<select id="listMyMessage" resultType="MyMessageVO">
		select 
			if((sender_id = #{thisUserId}  and sender_type =2 ), <!--  ? --> 
				 b.receiver_id                                   <!--  如果消息是我发送的-->
				,    
				 b.sender_id                                     <!-- 如果消息是对方发送的-->
			) talkId ,
			if((sender_id = #{thisUserId}  and sender_type =2 ), <!--  ? -->    <!--  如果消息是我发送的-->
		         (case when receiver_type = 1 then pra.avatar when receiver_type = 2 then wra.avatar when receiver_type = 3 then ora.avatar END )
				,
		         (case when sender_type = 1 then psa.avatar when sender_type = 2 then wsa.avatar when sender_type = 3 then osa.avatar END )      <!-- 如果消息是对方发送的-->
			) avatar,
			if((sender_id = #{thisUserId}  and sender_type =2 ), <!--  ? -->  <!-- 如果消息是我发送的-->
			     (case when receiver_type = 1 then pra.realname when receiver_type = 2 then wra.realname when receiver_type = 3 then ora.realname END )
				,
		         (case when sender_type = 1 then psa.realname when sender_type = 2 then wsa.realname when sender_type = 3 then osa.realname END )<!-- 如果消息是对方发送的-->
			) name,
			if((sender_id = #{thisUserId}  and sender_type =2 ), <!--  ? --> 
				 b.receiver_type                                 <!-- 如果消息是我发送的-->
				,    
				 b.sender_type                                   <!-- 如果消息是对方发送的-->
			) type,
			b.msg_id,
			b.gmt_create  sendTime
		from (
			SELECT 
			MAX(id) id ,
			if(sum(if(id>0,1,0)) > sum(if(is_read,1,0)) ,0,1) reade,
			if(sum(if(id>0,1,0)) > sum(if(is_read,1,0)) ,1,0) noread  from (
				select 
				id,
				is_read,
				IF((sender_id = #{thisUserId}  and sender_type =2 ),CONCAT(receiver_id,'_',receiver_type),CONCAT(sender_id,'_',sender_type)) object 
				from user_message 
				where  msg_type = 2 and is_deleted =0 and is_withdraw =0 and ((sender_id = #{thisUserId}  and sender_type =2 ) or (receiver_id = #{thisUserId}  and receiver_type =2) ) 
			) objecttable GROUP BY object 
		) a LEFT JOIN user_message b on a.id = b.id 
	    LEFT JOIN pmph_user psa on (sender_id = psa.id  and sender_type = 1)
	    LEFT JOIN writer_user wsa on (sender_id = wsa.id  and sender_type = 2)
		LEFT JOIN org_user osa on (sender_id = osa.id  and sender_type = 3)
	    LEFT JOIN pmph_user pra on (receiver_id = pra.id  and receiver_type = 1)
	    LEFT JOIN writer_user wra on (receiver_id = wra.id  and receiver_type = 2)
		LEFT JOIN org_user ora on (receiver_id = ora.id  and receiver_type = 3)
	    where 1 = 1
	    <if test="state != null ">
	    	<if test="state == 'reade' ">
	    		and reade  =1
	    	</if>
	    	<if test="state == 'noreade' ">
	    		and noread =1
	    	</if> 
	    </if>
	    order by b.gmt_create desc
	    limit #{start},#{pageSize}
	</select>
	
	<update id="updateMyTalk">
		update 
			user_message 
		set 
			is_read = 1 
		where   
			 sender_id = #{senderId}
			AND receiver_id = #{receiverId}
			AND sender_type = #{senderType}
			AND receiver_type = #{receiverType}

	</update>

	<select id="listMyMessageTotal" parameterType="PageParameter"
		resultType="Integer">
		SELECT count(*) FROM (SELECT
		*, MAX(m.gmt_create) sendTime
		FROM
		user_message m
		WHERE
		(m.receiver_id = #{parameter.userId} or m.sender_id =
		#{parameter.userId})
		AND (m.receiver_type =	#{parameter.userType}
		OR m.sender_type = #{parameter.userType}) 
		AND	m.is_deleted = FALSE
		AND	m.is_withdraw = FALSE
		AND m.msg_type = 2
		<if test="parameter.isRead != null">
			AND m.is_read = #{parameter.isRead}
		</if>
		GROUP BY m.sender_id
		ORDER BY sendTime DESC) t
	</select>
	
	<select id="listMyMessageDetail" resultType="MyMessageVO">
		SELECT
		*,m.gmt_create sendTime
		FROM
		user_message m
		WHERE
		(m.receiver_id =
		#{userId} OR m.sender_id = #{userId})
		AND
		(m.receiver_id = #{senderId}
		OR m.sender_id = #{senderType})
		AND
		(m.receiver_type = #{userType} OR
		m.sender_type = #{userType})
		AND
		(m.receiver_type = #{senderType} OR
		m.sender_type = #{senderType})
		ORDER BY sendTime DESC
	</select>

	<!-- 查询我与好友的对话记录 -->
	<select id="findMyDialogue" resultType="DialogueVO">
						select a.msg_id,
							a.sendTime,
							a.isMy,
 							sender_realname senderName,
							sender_avatar avatar
				 from (SELECT
					a.msg_id,
					a.gmt_create sendTime,
				IF (
					a.sender_id = #{thisId} ,true,false) isMy,
					(
						CASE
						WHEN a.receiver_type = 1 THEN
							r1.realname
						WHEN a.receiver_type = 2 THEN
							r2.realname
						WHEN a.receiver_type = 3 THEN
							r3.realname
						END
					) receiver_realname,
					(
						CASE
						WHEN a.receiver_type = 1 THEN
							r1.avatar
						WHEN a.receiver_type = 2 THEN
							r2.avatar
						WHEN a.receiver_type = 3 THEN
							r3.avatar
						END
					) receiver_avatar,
					(
						CASE
						WHEN a.sender_type = 1 THEN
							s1.realname
						WHEN a.sender_type = 2 THEN
							s2.realname
						WHEN a.sender_type = 3 THEN
							s3.realname
						END
					) sender_realname,
					(
						CASE
						WHEN a.sender_type = 1 THEN
							s1.avatar
						WHEN a.sender_type = 2 THEN
							s2.avatar
						WHEN a.sender_type = 3 THEN
							s3.avatar
						END
					) sender_avatar
				FROM
					user_message a
				LEFT JOIN pmph_user s1 ON a.sender_id = s1.id
				AND a.sender_type = 1
				LEFT JOIN writer_user s2 ON a.sender_id = s2.id
				AND a.sender_type = 2
				LEFT JOIN org_user s3 ON a.sender_id = s3.id
				AND a.sender_type = 3
				LEFT JOIN pmph_user r1 ON a.receiver_id = r1.id
				AND a.receiver_type = 1
				LEFT JOIN writer_user r2 ON a.receiver_id = r2.id
				AND a.receiver_type = 2
				LEFT JOIN org_user r3 ON a.receiver_id = r3.id
				AND a.receiver_type = 3
				WHERE
					a.msg_type = 2
				AND a.is_withdraw = 0
				AND a.is_deleted = 0
				AND (
					(
						a.sender_id = #{thisId}
						AND a.receiver_id = #{friendId}

						AND a.receiver_type = #{friendType}
					)
					OR (
						a.receiver_id = #{thisId}
						AND a.sender_id = #{friendId}

						AND a.sender_type = #{friendType}
					)
				)) a
				ORDER BY a.sendTime asc
	</select>

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="msgId != null and msgId !=''">
				msg_id,
			</if>
			<if test="msgType != null">
				msg_type,
			</if>
			<if test="title != null and title !='' ">
				title,
			</if>
			<if test="senderId != null ">
				sender_id,
			</if>
			<if test="senderType != null ">
				sender_type,
			</if>
			<if test="receiverId != null ">
				receiver_id,
			</if>
			<if test="receiverType != null ">
				receiver_type,
			</if>
			<if test="isRead != null ">
				is_read,
			</if>
			<if test="isWithdraw != null ">
				is_withdraw,
			</if>
			<if test="isDeleted != null ">
				is_deleted,
			</if>
			<if test="gmtCreate != null ">
				gmt_create,
			</if>
			<if test="gmtUpdate != null ">
				gmt_update,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="msgId != null and msgId !=''">
				#{msgId},
			</if>
			<if test="msgType != null">
				#{msgType},
			</if>
			<if test="title != null and title !='' ">
				#{title},
			</if>
			<if test="senderId != null ">
				#{senderId},
			</if>
			<if test="senderType != null ">
				#{senderType},
			</if>
			<if test="receiverId != null ">
				#{receiverId},
			</if>
			<if test="receiverType != null ">
				#{receiverType},
			</if>
			<if test="isRead != null ">
				#{isRead},
			</if>
			<if test="isWithdraw != null ">
				#{isWithdraw},
			</if>
			<if test="isDeleted != null ">
				#{isDeleted},
			</if>
			<if test="gmtCreate != null ">
				#{gmtCreate},
			</if>
			<if test="gmtUpdate != null ">
				#{gmtUpdate},
			</if>
		</trim>
	</sql>
	<!--单条插入 UserMessage -->
	<insert id="addUserMessage" parameterType="MyMessage">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into
		user_message(
		<include refid="key" />
		)
		values (
		<include refid="value" />
		)
	</insert>

	<!-- 通过id 动态更新UserMessage -->
	<update id="updateUserMessage" parameterType="MyMessage">
		update user_message
		<set>
			<if test="msgId != null">
				msg_id = #{msgId},
			</if>
			<if test="msgType != null">
				msg_type = #{msgType},
			</if>
			<if test="title != null and title != '' ">
				title = #{title},
			</if>
			<if test="senderId != null">
				sender_id = #{senderId},
			</if>
			<if test="senderType != null">
				sender_type =#{senderType},
			</if>
			<if test="receiverId != null">
				receiver_id =#{receiverId},
			</if>
			<if test="receiverType != null">
				receiver_type = #{receiverType},
			</if>
			<if test="isRead != null">
				is_read =#{isRead},
			</if>
			<if test="isWithdraw != null">
				is_withdraw = #{isWithdraw},
			</if>
			<if test="isDeleted != null">
				is_deleted =#{isDeleted},
			</if>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate},
			</if>
			<if test="gmtUpdate != null">
				gmt_update =#{gmtUpdate},
			</if>
		</set>
		where id = #{id} ;
	</update>

</mapper>