<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.pmpheep.back.commuser.materialdec.dao.ExpertationDao" >
    <!--查询产品信息-->
    <select id="queryProductbyId" resultType="java.util.Map" parameterType="java.lang.String">
        select
          id,product_name,product_type,
          is_published*1 is_published,
          is_unit_advise_used*1 is_unit_advise_used,
          is_unit_advise_required*1 is_unit_advise_required,
          is_edu_exp_used*1 is_edu_exp_used,
          is_edu_exp_required*1 is_edu_exp_required,
          is_work_exp_used*1 is_work_exp_used,
          is_work_exp_required*1 is_work_exp_required,
          is_acade_used*1 is_acade_used,
          is_acade_required*1 is_acade_required,
          is_pmph_textbook_used*1 is_pmph_textbook_used,
          is_pmph_textbook_required*1 is_pmph_textbook_required,
          is_monograph_used*1 is_monograph_used,
          is_monograph_required*1 is_monograph_required,
          is_edit_book_used*1 is_edit_book_used,
          is_edit_book_required*1 is_edit_book_required,
          is_deleted*1 is_deleted,
          gmt_create,gmt_update,founder_id,publisher_id,gmt_publish,note,description
        from product where product_type = #{expert_type}
    </select>
	<!-- 专家信息 --> 
	<select id="queryPerson" resultType="java.util.Map" parameterType="java.util.Map">
		select id,product_id,expert_type,user_id,realname,sex,birthday,REPLACE(birthday,'-','.') as birthday1,experience,org_name,position,title,address,postcode,handphone,email,idtype,
		idcard,telephone,fax,online_progress,auth_date,is_staging*1 is_staging,is_deleted*1 is_deleted,banknumber,bankaddress,
		gmt_create,gmt_update,education*1 education,expertise,return_cause,unit_advise,syllabus_name,org_id,banknumber,bankaddress from expertation t1
		 where 1= 1
		<if test="user_id != null and user_id != ''">
			and t1.user_id = #{user_id}
		</if>
		<if test="product_id != null and product_id != ''">
			and t1.product_id = #{product_id}
		</if>
		<if test="declaration_id != null and declaration_id != ''">
			and t1.id = #{declaration_id}
		</if>
		<if test="realname != null and realname != ''">
			and t1.realname = #{realname}
		</if>
	</select>
	<insert id="insertPerson" parameterType="java.util.Map">
		insert into expertation(product_id,expert_type,user_id,realname,sex,birthday,experience,org_name,position,
		title,address,postcode,handphone,email,idtype,idcard,telephone,fax,gmt_create,is_staging,online_progress,commit_date,banknumber
		,bankaddress,remark,degree,unit_advise,syllabus_name,education,org_id
		) values(#{product_id},#{expert_type},#{user_id},#{realname},#{sex},#{birthday},#{experience},#{org_name},#{position},
		#{title},#{address},#{postcode},#{handphone},#{email},#{idtype},#{idcard},#{telephone},#{fax},#{gmt_create},
		#{is_staging},#{online_progress},#{commit_date},#{banknumber},#{bankaddress},#{remark},#{degree},#{unit_advise},#{syllabus_name},#{education}
		
		,#{org_id})
	</insert>
	<update id="updatePerson" parameterType="java.util.Map">
		update expertation set realname = #{realname},sex = #{sex},birthday = #{birthday},experience = #{experience},expertise = #{expertise},
		org_name = #{org_name},position = #{position},title = #{title},address = #{address},idcard=#{idcard},
		postcode = #{postcode},handphone = #{handphone},email = #{email},idtype = #{idtype},is_staging = #{is_staging},telephone = #{telephone},fax = #{fax},
		gmt_update = #{gmt_update},online_progress = #{online_progress},banknumber = #{banknumber},degree=#{degree},education=#{education}
		<if test="commit_date != null and commit_date != ''">
			,commit_date=#{commit_date}
		</if>
		,bankaddress = #{bankaddress},remark=#{remark},unit_advise=#{unit_advise},syllabus_name=#{syllabus_name},org_id=#{org_id}
		 where id = #{declaration_id}
	</update>

    <!-- 查询学科分类列表 -->
    <select id="querySubjectList" parameterType="PageParameter" resultType="java.util.Map">
        select * from product_subject_type t where 1=1
        <if test="parameter.type_name != null and parameter.type_name != ''">
            and t.type_name like #{parameter.type_name}
        </if>
        <if test="parameter.chooseId != null and parameter.chooseId != ''">
        	and t.id not in (${parameter.chooseId})
        </if>
        order by parent_id asc limit #{start},#{pageSize}
    </select>
    <!-- 学科分类总数 -->
    <select id="querySubjectCount" parameterType="PageParameter" resultType="int">
        select count(*) from product_subject_type t where 1=1
        <if test="parameter.type_name != null and parameter.type_name != ''">
            and t.type_name like #{parameter.type_name}
        </if>
        <if test="parameter.chooseId != null and parameter.chooseId != ''">
        	and t.id not in (${parameter.chooseId})
        </if>
    </select>

    <!-- 查询内容分类列表 -->
    <select id="queryContentList" parameterType="PageParameter" resultType="java.util.Map">
        select * from product_content_type_detail t where is_leaf = '1'
        <if test="parameter.name_path != null and parameter.name_path != ''">
            and t.name_path like #{parameter.name_path}
        </if>
        <if test="parameter.chooseId != null and parameter.chooseId != ''">
        	and t.product_type_id not in (${parameter.chooseId})
        </if>
        order by t.id asc limit #{start},#{pageSize}
    </select>
    <!-- 内容分类总数 -->
    <select id="queryContentCount" parameterType="PageParameter" resultType="int">
        select count(*) from product_content_type_detail t where is_leaf = '1'
        <if test="parameter.name_path != null and parameter.name_path != ''">
            and t.name_path like #{parameter.name_path}
        </if>
        <if test="parameter.chooseId != null and parameter.chooseId != ''">
        	and t.product_type_id not in (${parameter.chooseId})
        </if>
    </select>

    <!--学科分类关联表-->
    <select id="selectSubject" parameterType="java.util.Map" resultType="java.util.Map">
        select t1.*,t2.type_name from expertation_subject_type t1
	    left join product_subject_type t2 on t1.product_subject_type_id = t2.id
      where t1.expertation_id = #{declaration_id}
    </select>
    <update id="insertSubject" parameterType="java.util.Map">
        insert into expertation_subject_type(expertation_id,product_subject_type_id) VALUES(#{expertation_id},#{subjectId})
    </update>
    <delete id="delSubject" parameterType="java.lang.String">
        delete from expertation_subject_type where expertation_id = #{expertation_id}
    </delete>

    <!--内容分类关联表-->
    <select id="selectContent" parameterType="java.util.Map" resultType="java.util.Map">
       select t1.*,t2.name_path from expertation_content_type t1
	  left join product_content_type_detail t2 on t1.product_content_type_id = t2.product_type_id
        where t1.expertation_id = #{declaration_id}
    </select>
    <update id="insertContent" parameterType="java.util.Map">
        insert into expertation_content_type(expertation_id,product_content_type_id) VALUES(#{expertation_id},#{contentId})
    </update>
    <delete id="delContent" parameterType="java.lang.String">
        delete from expertation_content_type where expertation_id = #{expertation_id}
    </delete>

	<!--根据作家艾迪查询申报（首页三大新产品申报）-->
	<select id="queryExpertation" resultType="java.util.Map" parameterType="java.util.Map">
		select
			group_concat(pd.name_path  separator '_,_') as name_path,
			e.*,
			DATE_FORMAT(e.gmt_create,'%Y-%m-%d') as gmt_create_new
			from expertation e
			left join expertation_content_type et on et.expertation_id = e.id
			left join product_content_type_detail pd on et.product_content_type_id = pd.product_type_id
            where e.user_id=#{user_id}
            group by e.id
	</select>

    <!--根据用户ID查询申请表-->
	<select id="queryExpertationDetail" resultType="java.util.Map" parameterType="java.util.Map">
	   select * from expertation  where user_id=#{user_id} and expert_type=#{expert_type}
	</select>

    <!-- 学习经历 -->
    <select id="queryStu" resultType="java.util.Map" parameterType="java.util.Map">
        select e.*, REPLACE(e.date_begin,'-','.') as dbegin,REPLACE(e.date_end,'-','.') as dend
        from dec_edu_exp  e where e.expertation_id = #{declaration_id} ORDER BY e.sort
    </select>
    <insert id="insertStu" parameterType="java.util.Map">
        insert into dec_edu_exp(per_id,expertation_id,school_name,major,degree,note,date_begin,date_end,sort)
        values(#{per_id},#{declaration_id},#{school_name},#{major},#{degree},#{note},#{date_begin},#{date_end},#{sort})
    </insert>
    <delete id="DelStu" parameterType="java.util.Map">
        delete from dec_edu_exp where expertation_id = #{declaration_id}
    </delete>
    <!-- 工作经历 -->
    <select id="queryWork" resultType="java.util.Map" parameterType="java.util.Map">
        select e.*, REPLACE(e.date_begin,'-','.') as dbegin,REPLACE(e.date_end,'-','.') as dend
        from dec_work_exp  e where e.expertation_id = #{declaration_id} ORDER BY e.sort
    </select>
    <insert id="insertWork" parameterType="java.util.Map">
        insert into dec_work_exp(per_id,expertation_id,org_name,position,note,date_begin,date_end,sort)
        values(#{per_id},#{declaration_id},#{org_name},#{position},#{note},#{date_begin},#{date_end},#{sort})
    </insert>
    <delete id="DelWork" parameterType="java.util.Map">
        delete from dec_work_exp where expertation_id = #{declaration_id}
    </delete>
    <!-- //作家学术 -->
    <select id="queryZjxs" resultType="java.util.Map" parameterType="java.util.Map">
        select * from dec_acade where expertation_id = #{declaration_id} ORDER BY sort
    </select>
    <insert id="insertZjxs" parameterType="java.util.Map">
        insert into dec_acade(per_id,expertation_id,org_name,rank,position,note,sort)
        values(#{per_id},#{declaration_id},#{org_name},#{rank},#{position},#{note},#{sort})
    </insert>
    <delete id="DelZjxs" parameterType="java.util.Map">
        delete from dec_acade where expertation_id = #{declaration_id}
    </delete>
    <!-- 人卫社教材编写情况 -->
    <select id="queryRwsjc" resultType="java.util.Map" parameterType="java.util.Map">
        select id,expertation_id,material_name,rank,position,
        is_digital_editor*1 is_digital_editor,publish_date,REPLACE(publish_date,'-','.') as publishdate,isbn,note,sort
        from dec_textbook_pmph where expertation_id = #{declaration_id}
        ORDER BY sort
    </select>
    <insert id="insertRwsjc" parameterType="java.util.Map">
        insert into dec_textbook_pmph(per_id,expertation_id,material_name,rank,position,publish_date,isbn,note,is_digital_editor,sort)
        values(#{per_id},#{declaration_id},#{material_name},#{rank},#{position},#{publish_date},#{isbn},#{note},#{is_digital_editor},#{sort})
    </insert>
    <delete id="DelRwsjc" parameterType="java.util.Map">
        delete from dec_textbook_pmph where expertation_id = #{declaration_id}
    </delete>
    <!-- 作家扩展项填报表 -->
    <select id="queryZjkzbb" resultType="java.util.Map" parameterType="java.util.Map">
        select * from (
        select id,product_id,extension_name,is_required,is_deleted from product_extension
        where product_id = #{product_id} and is_deleted = 0
        )t4 left join
        (select t1.id,t2.expertation_id,t2.content from product_extension t1 LEFT JOIN dec_extension t2 ON
        t1.id = t2.extension_id where t2.expertation_id = #{declaration_id}
        )t3 on t4.id = t3.id
    </select>
    <!-- 作家扩展项填报表新增 -->
    <insert id="insertZjkzbb" parameterType="java.util.Map">
        insert into dec_extension(extension_id,expertation_id,content) values(#{extension_id},#{declaration_id},#{content})
    </insert>
    <delete id="delZjkzbb" parameterType="java.util.Map">
        delete from dec_extension where expertation_id = #{declaration_id}
    </delete>
    <!-- 通过教材ID查出相关的扩展信息 -->
    <select id="queryZjkzxxById" resultType="java.util.Map" parameterType="java.lang.String">
        select id,product_id,extension_name,is_required from product_extension where product_id = #{product_id} and is_deleted = 0
    </select>
    <!-- //主编学术专著情况 -->
    <select id="queryMonograph" resultType="java.util.Map" parameterType="java.util.Map">
        select id,expertation_id,monograph_name,monograph_date,REPLACE(monograph_date,'-','.') as monographdate,is_self_paid*1 is_self_paid,publisher,publish_date,REPLACE(publish_date,'-','.') as publishdate,note,sort from dec_monograph where expertation_id = #{declaration_id} ORDER BY sort
    </select>
    <insert id="insertMonograph" parameterType="java.util.Map">
        insert into dec_monograph(per_id,expertation_id,monograph_name,monograph_date,is_self_paid,publisher,publish_date,note,sort)
        values(#{per_id},#{declaration_id},#{monograph_name},#{monograph_date},#{is_self_paid},#{publisher},#{publish_date},#{note},#{sort})
    </insert>
    <delete id="DelMonograph" parameterType="java.util.Map">
        delete from dec_monograph where expertation_id = #{declaration_id}
    </delete>
    <!-- 作家主编国家级规划教材情况 -->
    <select id="queryGjghjc" resultType="java.util.Map" parameterType="java.util.Map">
        select * from dec_national_plan where expertation_id = #{declaration_id} ORDER BY sort
    </select>
    <insert id="insertGjghjc" parameterType="java.util.Map">
        insert into dec_national_plan(per_id,expertation_id,material_name,isbn,rank_text,note,sort)
        values(#{per_id},#{declaration_id},#{material_name},#{isbn},#{rank_text},#{note},#{sort})
    </insert>
    <delete id="DelGjghjc" parameterType="java.util.Map">
        delete from dec_national_plan where expertation_id = #{declaration_id}
    </delete>
    <!-- 主编或参编图书情况 -->
    <select id="queryEditor" resultType="java.util.Map" parameterType="java.util.Map">
        select * from dec_editor_book where expertation_id = #{declaration_id} ORDER BY sort
    </select>
    <insert id="insertEditor" parameterType="java.util.Map">
        insert into dec_editor_book(per_id,expertation_id,material_name,publisher,publish_date,note,sort)
        values(#{per_id},#{declaration_id},#{material_name},#{publisher},#{publish_date},#{note},#{sort})
    </insert>
    <delete id="delEditor" parameterType="java.util.Map">
        delete from dec_editor_book where expertation_id = #{declaration_id}
    </delete>
    <!--查看临床信息-->
    <select id="queryProduct" resultType="java.util.Map" parameterType="java.lang.String">
        select * from product where product_type = #{product_type}
    </select>
    
    <!-- 更新 -->
    <update id="updateExpertationAudit" parameterType="Map">
    	update expertation 
    	<set>
    		<if test="online_progress != null ">
    			online_progress = #{online_progress},
    		</if>
    		<if test="return_cause != null ">
    			return_cause = #{return_cause},
    		</if>
    	</set>
    	where id = #{expertation_id}
    </update>
    
    <select id="queryOrgById" parameterType="String" resultType="Map">
    	select 
    		id
    		,org_name 
    	from org where id = #{id}
    </select>
    
    <!-- 查询机构列表 -->
	<select id="queryOrgList" parameterType="PageParameter" resultType="java.util.Map">
		select * from (
			select t1.product_id,t1.org_id,t2.org_name,t2.sort from product_org t1 LEFT JOIN org t2 on t1.org_id = t2.id where 1=1
			<if test="parameter.product_id != null and parameter.product_id != ''">
				and t1.product_id = #{parameter.product_id}
			</if>
			UNION select '' product_id,'0' org_id,'人民卫生出版社' org_name,'0' sort from dual
		)t 
		<if test="parameter.org_name != null and parameter.org_name != ''">
			where t.org_name like #{parameter.org_name}
			</if>
		 order by sort asc limit #{start},#{pageSize}
	</select>
	<!-- 机构数据总数 -->
	<select id="queryOrgCount" parameterType="PageParameter" resultType="int">
		select count(*) from (
			select t1.product_id,t1.org_id,t2.org_name,t2.sort from product_org t1 LEFT JOIN org t2 on t1.org_id = t2.id where 1=1
			<if test="parameter.product_id != null and parameter.product_id != ''">
				and t1.product_id = #{parameter.product_id}
			</if>
			UNION select '' product_id,'0' org_id,'人民卫生出版社' org_name,'0' sort from dual
		)t
			<if test="parameter.org_name != null and parameter.org_name != ''">
				where t.org_name like #{parameter.org_name}
			</if>
	</select>
    
    
</mapper>