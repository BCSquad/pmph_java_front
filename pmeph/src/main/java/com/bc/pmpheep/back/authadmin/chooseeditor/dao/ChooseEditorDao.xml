<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.pmpheep.back.authadmin.chooseeditor.dao.ChooseEditorDao">
	
	<resultMap type="java.util.Map" id="editorToBeList">
		
	</resultMap>
	
	
	<select id="queryEditorToBeList" parameterType="PageParameter" resultMap="editorToBeList">
		select t.* from 
		(
			SELECT
			d.id as declaration_id,
			dp.id as dec_position_id,
			d.user_id,
			d.realname,
			d.sex,
			d.org_name AS work_org_name,
			d.org_id as dec_org_id,
			(case
			when d.org_id = 0
			then '人民卫生出版社'
			else o.org_name
			end) AS dec_org_name,
			d.position,
			(dp.chosen_position  IN  (1,2) and dpp.chosen_position IN  (1,2)) as editorAvaliable,<!-- 未被选为主编副主编，还可以选编委，控制编委复选框disabled -->
			d.title,
			tb.is_list_selected,<!-- 第一主编提交1/暂存0 -->
			tb.is_locked,       <!-- 锁定，等于1后就不能再选择了 -->
			m.is_digital_editor_optional,<!-- 是否可选数字编委 -->
			m.is_force_end,     <!-- 教材是否强制结束 -->
			m.is_all_textbook_published, <!-- 教材是完成发布而结束 -->
			(case
			when tb.is_published = 1 or m.is_force_end =1 or #{parameter.isFirstEditorLogIn} = 'false' <!-- 已公布 或 强制结束 或 非第一主编登录  -->
			then      <!-- 显示发布表 -->
				(case
					when dpp.chosen_position = 3  <!-- 被选为编委 -->
					then 3
					when dpp.chosen_position >= 8 <!-- 被选为数字编委 -->
					then 8
					when dpp.chosen_position = 1 or dpp.chosen_position = 2 <!-- 被选为主编或副主编 -->
					then 5 
					else 4 
					end)
			when tb.is_list_selected = 1 or tb.is_locked =1 <!-- 被锁定 或 主编已提交 --> or count(dpt.id) = 0
			then      <!-- 显示正式表 -->
				(case
					when dp.chosen_position = 3  <!-- 被选为编委 -->
					then 3
					when dp.chosen_position >= 8 <!-- 被选为数字编委 -->
					then 8
					when dp.chosen_position = 1 or dp.chosen_position = 2 <!-- 被选为主编或副主编 -->
					then 5 
					else 4 
					end)
			else	<!-- 显示暂存表 -->
				(case 
					when dpt.chosen_position = 3 <!-- 同时被选为编委和数字编委 -->
					then 3
					when dpt.chosen_position = 8 <!-- 被选为数字编委 -->
					then 8
					when dpt.chosen_position = 1 or dpt.chosen_position = 2 <!-- 被选为主编或副主编 -->
					then 5 
					else 4 
					end)
			end)
			as chosen_position

			FROM
			declaration AS d 
			Inner Join dec_position AS dp ON dp.declaration_id = d.id
			left join textbook tb on tb.id = dp.textbook_id
			left Join dec_position_temp AS dpt  
				ON dpt.declaration_id = dp.declaration_id 
				and dpt.textbook_id=dp.textbook_id
			<if test="parameter.logUserId != null and parameter.logUserId != '' ">
				and dpt.author_id =  #{parameter.logUserId}
			</if>
			left Join dec_position_published AS dpp  
				ON dpp.declaration_id = dp.declaration_id 
				and dpp.textbook_id=dp.textbook_id
			
			inner join material m on m.id = tb.material_id
			
			Left Join org AS o ON d.org_id = o.id
			<where>
				<!-- dp.chosen_position NOT IN  (2, 4, 10, 12) -->
				<if test="parameter.textBookId != null and parameter.textBookId != '' ">
					and dp.textbook_id = ${parameter.textBookId}
				</if>
				<if test="parameter.queryName != null and parameter.queryName != '' ">
					and d.realname like concat("%",#{parameter.queryName},"%")
				</if>
				<if test="parameter.queryOrg != null and parameter.queryOrg != '' and parameter.queryOrg != 'all' ">
					and d.org_id = ${parameter.queryOrg}
				</if>
					and d.online_progress in (1,3) and d.is_staging = 0
				AND dp.chosen_position  not in (1,2)
			</where>
			group by d.id <!-- 因为要统计暂存表里有没有数据来作为决定是否读暂存表的条件之一 必须group -->
		)t
		<where>
			<if test="parameter.excelChoosen != null and parameter.excelChoosen != '' ">
				and t.chosen_position not in (1,2)
			</if>
		</where>
		order by t.chosen_position asc
		<if test="start >= 0 ">
			limit ${start},${pageSize}
		</if>
	</select>
	
	<select id="queryEditorToBeCount" parameterType="PageParameter" resultType="java.util.Map">
		
			SELECT
			dp.id as dec_position_id,
			tb.is_list_selected ,
			(case
			when tb.is_published = 1 or m.is_force_end =1 or #{parameter.isFirstEditorLogIn} = 'false'
			then
				dpp.chosen_position
			when tb.is_list_selected = 1 or tb.is_locked =1 or count(dpt.id) = 0
			then
				dp.chosen_position
			else	
				dpt.chosen_position
			end)
			as chosen_position
			FROM
			declaration AS d 
			left Join  dec_position AS dp ON dp.declaration_id = d.id
			left join textbook tb on tb.id = dp.textbook_id
			left Join dec_position_temp AS dpt  
			ON dpt.declaration_id = dp.declaration_id 
			and dpt.textbook_id=dp.textbook_id
			<if test="parameter.logUserId != null and parameter.logUserId != '' ">
				and dpt.author_id =  #{parameter.logUserId}
			</if>
			left Join dec_position_published AS dpp  
			ON dpp.declaration_id = dp.declaration_id 
			and dpp.textbook_id=dp.textbook_id
			
			inner join material m on m.id = tb.material_id

			Left Join org AS o ON d.org_id = o.id
			<where>
				<!-- dp.chosen_position IN  (1,9) -->
				<if test="parameter.textBookId != null and parameter.textBookId != '' ">
					and dp.textbook_id = ${parameter.textBookId}
				</if>
				<if test="parameter.queryName != null and parameter.queryName != '' ">
					and d.realname like concat("%",#{parameter.queryName},"%")
				</if>
				<if test="parameter.queryOrg != null and parameter.queryOrg != '' and parameter.queryOrg != 'all'  ">
					and d.org_id = ${parameter.queryOrg}
				</if>
					and d.online_progress in (1,3) and d.is_staging = 0
			</where>
			group by d.id <!-- 因为要统计暂存表里有没有数据来作为决定是否读暂存表的条件之一 必须group -->
		
	</select>
	
	<!-- 查询所有数字编委 -->
	<select id="queryNumEditorToBeCount" parameterType="PageParameter" resultType="java.util.Map">
			SELECT
			dp.id as dec_position_id,
			tb.is_list_selected,
			case
			when tb.is_list_selected = 1 
			then
				dp.chosen_position
			else	
				dpt.chosen_position
			end
			as chosen_position
			FROM
			dec_position AS dp
			left join textbook tb on tb.id = dp.textbook_id
			left Join dec_position_temp AS dpt  
			ON dpt.declaration_id = dp.declaration_id 
			and dpt.textbook_id=dp.textbook_id
			<if test="parameter.logUserId != null and parameter.logUserId != '' ">
				and dpt.author_id =  #{parameter.logUserId}
			</if>
			Inner Join declaration AS d ON dp.declaration_id = d.id
			Left Join org AS o ON d.org_id = o.id
			<where>
				case
				when tb.is_list_selected = 3
				else
					dpt.chosen_position >=3
				end
				
				<if test="parameter.textBookId != null and parameter.textBookId != '' ">
					and dp.textbook_id = ${parameter.textBookId}
				</if>
				<if test="parameter.queryName != null and parameter.queryName != '' ">
					and d.realname like concat("%",#{parameter.queryName},"%")
				</if>
				<if test="parameter.queryOrg != null and parameter.queryOrg != '' and parameter.queryOrg != 'all'  ">
					and d.org_id = ${parameter.queryOrg}
				</if>
			</where>
	</select>

	<select id="isFirstEditorLogIn" resultType="Integer" >
		select dpp.id from 
		dec_position_published dpp
		inner join declaration d on d.id = dpp.declaration_id
		where 
		textbook_id= #{textBookId}
		and d.user_id = #{logUserId}
		and dpp.chosen_position in (1)
		and dpp.rank = 1
	</select>


	<select id="queryTextBookById" parameterType="String" resultType="Map">
		SELECT
		t.*
		,m.is_digital_editor_optional <!-- 是否可选数字编委 -->
		,m.is_force_end
		,u.realname
		,mp.position_code
		FROM
		textbook t
		inner join material m
		on m.id = t.material_id
		left join pmph_user u on t.planning_editor = u.id
		LEFT JOIN material_position mp on mp.material_id =m.id and mp.position_code =3
		WHERE
		t.id =  #{textBookId}
	</select>
	
	<select id="getOrgList" resultType="Map">
		select o.id,o.org_name
		from 
		material_org mo 
		join org o on mo.org_id = o.id and material_id = #{material_id}
	</select>
	
	<delete id="deleteTempByAuthorIdAndTextbookId" parameterType="Map">
		<if test="logUserId != null and logUserId != '' and textBookId != null and textBookId != '' ">
			delete from dec_position_temp
			where author_id=#{logUserId} and is_background = #{is_background} and textbook_id = #{textBookId}
		</if>
	</delete>


	
	<insert id="copyTempBySelectedIds" parameterType="Map" >

		insert  into dec_position_temp   (
		id,
		author_id,
		is_background,
		declaration_id,
		textbook_id,
		preset_position,
		is_on_list,
		chosen_position,
		rank,
		syllabus_id,
		syllabus_name
		 )
		select
		d.id,
		${logUserId},
		${is_background},
		d.declaration_id,
		d.textbook_id,
		d.preset_position,
		d.is_on_list,
		3,
		d.rank,
		d.syllabus_id,
		d.syllabus_name

		 from dec_position d
		where
		d.id  in (${selectedIds})
		ON DUPLICATE KEY UPDATE author_id= values(author_id) , is_background = values(is_background) , gmt_update = now();
	</insert>

	<insert id="copyTempBySelectedIds2" parameterType="Map" >

		insert  into dec_position_temp   (
		id,
		author_id,
		is_background,
		declaration_id,
		textbook_id,
		preset_position,
		is_on_list,
		chosen_position,
		rank,
		syllabus_id,
		syllabus_name
		 )
		select
		d.id,
		${logUserId},
		${is_background},
		d.declaration_id,
		d.textbook_id,
		d.preset_position,
		d.is_on_list,
		8,
		d.rank,
		d.syllabus_id,
		d.syllabus_name
		 from dec_position d
		where
		d.id   in (${selectedNumIds})
		ON DUPLICATE KEY UPDATE author_id= values(author_id) , is_background = values(is_background) , gmt_update = now();
	</insert>

	<!-- 暂存数字编委 -->
	<!-- <update id="updateTempBySelectedNumIds" parameterType="map">
		update dec_position_temp   
		set chosen_position = 9
		where declaration_id IN (
			select 
			d.declaration_id 
		 	from dec_position d
			where
			d.id in  (${selectedNumIds})
			)
	</update> -->
	
	<!-- 保存数字编委 -->
	<!-- <update id="updateDecPositionBySelectNumIds" parameterType="Map">
		update dec_position set chosen_position = 8 
		where id in (${selectedNumIds})
	</update> -->
	
	
	<update id="updateDecPositionBySelectIds" parameterType="Map">
		update dec_position_temp t , dec_position d
		set
		d.chosen_position =3
		where d.id = t.id and d.textbook_id = #{textBookId} and t.author_id=${logUserId} and t.is_background = 0
	
		<!-- update dec_position set chosen_position = 1 
		where id in (${selectedIds}) and id not in (${selectedNumIds});
		
		update dec_position set chosen_position = chosen_position + 8 
		where id not in (${selectedIds}) and id in (${selectedNumIds});
		
		update dec_position set chosen_position = 9 
		where id in (${selectedIds}) and id in (${selectedNumIds});  -->
	</update>
	<update id="updateDecPositionBySelectIds2" parameterType="Map">
		update dec_position_temp t , dec_position d
		set
		d.chosen_position =8
		where d.id = t.id and d.textbook_id = #{textBookId} and t.author_id=${logUserId} and t.is_background = 0

		<!-- update dec_position set chosen_position = 1
		where id in (${selectedIds}) and id not in (${selectedNumIds});

		update dec_position set chosen_position = chosen_position + 8
		where id not in (${selectedIds}) and id in (${selectedNumIds});

		update dec_position set chosen_position = 9
		where id in (${selectedIds}) and id in (${selectedNumIds});  -->
	</update>

	<select id="selectTempByTextBookId" parameterType="Map" resultType="java.util.Map">
		<if test="logUserId != null and logUserId != '' and textBookId != null and textBookId != '' ">
			select *  from dec_position_temp
			where author_id=#{logUserId} and is_background = #{is_background} and textbook_id = #{textBookId}
		</if>
	</select>
	<update id="updateTextBookListSelected" parameterType="Map">
		update textbook set is_list_selected = #{is_list_selected} 
		where id = #{textBookId}
	</update>
	<update id="updateDecPostion" parameterType="Map">
		update dec_position set chosen_position = #{chosen_position}
		where  declaration_id= #{declaration_id}
	</update>


</mapper>