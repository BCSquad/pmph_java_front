<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.pmpheep.back.commuser.materialdec.dao.MaterialDetailDao" >
	<!-- 通过教材ID查询出教材信息 -->
	<select id="queryMaterialbyId" resultType="java.util.Map" parameterType="java.lang.String">
		select 
		t1.id,
		t1.material_name,
		t1.material_round,
		t1.material_type,
		t1.deadline,
		t1.actual_deadline,
		t1.age_deadline,
		t1.mail_address,
		t1.department_id,
		t1.director,
		t1.is_multi_books*1 is_multi_books,
		t1.is_multi_position*1 is_multi_position, 
		t1.is_edu_exp_used*1 is_edu_exp_used,
		t1.is_edu_exp_required*1 is_edu_exp_required,
		t1.is_work_exp_used*1 is_work_exp_used,
		t1.is_work_exp_required*1 is_work_exp_required, 
		t1.is_teach_exp_used*1 is_teach_exp_used, 
		t1.is_teach_exp_required*1 is_teach_exp_required, 
		t1.is_acade_used*1 is_acade_used, 
		t1.is_acade_required*1 is_acade_required, 
		t1.is_last_position_used*1 is_last_position_used,
		t1.is_last_position_required*1 is_last_position_required,
		t1.is_course_used*1 is_course_used,
		t1.is_course_required*1 is_course_required,
		t1.is_national_plan_used*1 is_national_plan_used, 
		t1.is_national_plan_required*1 is_national_plan_required, 
		t1.is_textbook_used*1 is_textbook_used,
		t1.is_textbook_required*1 is_textbook_required,
		t1.is_pmph_textbook_used*1 is_pmph_textbook_used, 
		t1.is_pmph_textbook_required*1 is_pmph_textbook_required, 
		t1.is_research_used*1 is_research_used,
		t1.is_research_required*1 is_research_required,
		t1.is_mooc_digital_used*1 is_mooc_digital_used,
		t1.is_mooc_digital_required*1 is_mooc_digital_required,
		t1.is_intention_used*1 is_intention_used,
		t1.is_intention_required*1 is_intention_required,
		t1.is_deleted*1 is_deleted,
		t1.gmt_create,
		t1.founder_id, 
		t1.gmt_update,
		t1.mender_id,
		t1.is_all_textbook_published*1 is_all_textbook_published, 
		t1.is_force_end*1 is_force_end,
		t1.project_permission,
		t1.plan_permission, 
		t1.is_achievement_used*1 is_achievement_used,
		t1.is_achievement_required*1 is_achievement_required, 
		t1.is_digital_editor_optional* 1 is_digital_editor_optional, 
		t1.is_monograph_used*1 is_monograph_used, 
		t1.is_monograph_required*1 is_monograph_required, 
		t1.is_publish_reward_used* 1 is_publish_reward_used, 
		t1.is_publish_reward_required*1 is_publish_reward_required, 
		t1.is_sci_used*1 is_sci_used, 
		t1.is_sci_required*1 is_sci_required,
		t1.is_clinical_reward_used*1 is_clinical_reward_used, 
		t1.is_clinical_reward_required*1 is_clinical_reward_required, 
		t1.is_acade_reward_used*1 is_acade_reward_used,
		t1.is_acade_reward_required*1 is_acade_reward_required, 
		t1.is_published*1 is_published, 
		t1.is_public*1 is_public from material t1 where t1.id = #{material_id}
	</select>
	
	<!-- 通过教材ID查询所有书籍 -->
	<select id="queryBookById" resultType="java.util.Map" parameterType="java.lang.String">
		select * from textbook where material_id = #{material_id} order by sort asc
	</select>
	<!-- 通过教材ID查出相关的机构信息 -->
	<select id="queryOrgById" resultType="java.util.Map" parameterType="java.lang.String">
		select * from material_org t1 LEFT JOIN org t2 on t1.org_id = t2.id
			where t1.material_id = #{material_id}
	</select>
	<!-- 通过教材ID查出相关的扩展信息 -->
	<select id="queryZjkzxxById" resultType="java.util.Map" parameterType="java.lang.String">
		select id,material_id,extension_name,is_required from material_extension where material_id = #{material_id}
	</select>
	
	<!-- 专家信息 --> 
	<select id="queryPerson" resultType="java.util.Map" parameterType="java.util.Map">
		select t1.*,t2.org_name dwmc from (select id,material_id,user_id,realname,sex,birthday,experience,org_name,position,title,address,postcode,handphone,email,idtype,
idcard,telephone,fax,org_id,online_progress,auth_user_id,auth_date,offline_progress,paper_date,is_staging*1 is_staging,is_deleted*1 is_deleted,
gmt_create,gmt_update,is_dispensed*1 is_dispensed,is_utec*1 is_utec,degree,expertise,return_cause from declaration) t1 left join (select id,org_name from org 
	union select '0' id,'人民卫生出版社' org_name from dual) t2 on t1.org_id = t2.id
		 where 1= 1 
		<if test="user_id != null and user_id != ''">
			and t1.user_id = #{user_id} 
		</if>
		<if test="material_id != null and material_id != ''">
			and t1.material_id = #{material_id}
		</if>
		<if test="declaration_id != null and declaration_id != ''">
			and t1.id = #{declaration_id}
		</if>
		<if test="realname != null and realname != ''">
			and t1.realname = #{realname}
		</if>
	</select>
	<insert id="insertPerson" parameterType="java.util.Map">
		insert into declaration(material_id,user_id,realname,sex,birthday,experience,org_name,position,expertise,
		title,address,postcode,handphone,email,idtype,idcard,telephone,fax,org_id,gmt_create,is_staging,online_progress
		) values(#{material_id},#{user_id},#{realname},#{sex},#{birthday},#{experience},#{org_name},#{position},#{expertise},
		#{title},#{address},#{postcode},#{handphone},#{email},#{idtype},#{idcard},#{telephone},
		#{fax},#{org_id},#{gmt_create},#{is_staging},#{online_progress})
	</insert>
	<update id="updatePerson" parameterType="java.util.Map">
		update declaration set realname = #{realname},sex = #{sex},birthday = #{birthday},experience = #{experience},expertise = #{expertise},
		org_name = #{org_name},position = #{position},title = #{title},address = #{address},idcard=#{idcard},
		postcode = #{postcode},handphone = #{handphone},email = #{email},idtype = #{idtype},is_staging = #{is_staging},
		telephone = #{telephone},fax = #{fax},org_id = #{org_id},gmt_update = #{gmt_update},online_progress = #{online_progress}
		 where id = #{declaration_id}
	</update>
	
	<!-- 图书选择 -->
	<select id="queryTsxz" resultType="java.util.Map" parameterType="java.util.Map">
		select t1.id,t1.declaration_id,t1.textbook_id,t1.preset_position,t1.is_on_list*1 is_on_list,
			t1.chosen_position,t1.rank,t1.syllabus_id,t1.syllabus_name,t1.gmt_create,t1.gmt_update,t2.textbook_name from dec_position t1 left join textbook t2
			on t1.textbook_id = t2.id where t1.declaration_id = #{declaration_id} 
		ORDER BY t1.gmt_create desc
	</select>
	<insert id="insertTsxz" parameterType="java.util.Map"  useGeneratedKeys="true" keyProperty="table_trendst_id">
		insert into dec_position(declaration_id,textbook_id,preset_position,syllabus_id,syllabus_name,gmt_create)
		  values(#{declaration_id},#{textbook_id},#{preset_position},#{syllabus_id},#{syllabus_name},#{gmt_create})
	</insert>
	<delete id="DelTsxz" parameterType="java.util.Map">
		delete from dec_position where declaration_id = #{declaration_id}
	</delete>
	<!--图书申报职位暂存 -->
	<select id="queryTssbZc" resultType="java.util.Map" parameterType="java.util.Map">
		select t1.id,t1.author_id,t1.is_background*1 is_background,t1.declaration_id,t1.textbook_id,t1.preset_position,t1.is_on_list*1 is_on_list,
		t1.chosen_position,t1.rank,t1.syllabus_id,t1.syllabus_name,t1.gmt_create,t1.gmt_update,t2.textbook_name from dec_position_temp t1 left join textbook t2
		on t1.textbook_id = t2.id where t1.declaration_id = #{declaration_id} 
		ORDER BY t1.gmt_create desc
	</select>
	<insert id="insertTssbZc" parameterType="java.util.Map">
		insert into dec_position_temp(author_id,is_background,declaration_id,textbook_id,preset_position,syllabus_id,syllabus_name,gmt_create)
		  values(#{author_id},#{is_background},#{declaration_id},#{textbook_id},#{preset_position},#{syllabus_id},#{syllabus_name},#{gmt_create})
	</insert>
	<delete id="DelTssbZc" parameterType="java.util.Map">
		delete from dec_position_temp where declaration_id = #{declaration_id}
	</delete>
	<!-- 学习经历 -->
	<select id="queryStu" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_edu_exp where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertStu" parameterType="java.util.Map">
		insert into dec_edu_exp(declaration_id,school_name,major,degree,note,date_begin,date_end,sort)
		  values(#{declaration_id},#{school_name},#{major},#{degree},#{note},#{date_begin},#{date_end},#{sort})
	</insert>
	<delete id="DelStu" parameterType="java.util.Map">
		delete from dec_edu_exp where declaration_id = #{declaration_id}
	</delete>
	<!-- 工作经历 -->
	<select id="queryWork" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_work_exp where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertWork" parameterType="java.util.Map">
		insert into dec_work_exp(declaration_id,org_name,position,note,date_begin,date_end,sort)
		  values(#{declaration_id},#{org_name},#{position},#{note},#{date_begin},#{date_end},#{sort})
	</insert>
	<delete id="DelWork" parameterType="java.util.Map">
		delete from dec_work_exp where declaration_id = #{declaration_id}
	</delete>
	<!--教学经历-->
	<select id="queryStea" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_teach_exp where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertStea" parameterType="java.util.Map">
		insert into dec_teach_exp(declaration_id,school_name,subject,note,date_begin,date_end,sort)
		  values(#{declaration_id},#{school_name},#{subject},#{note},#{date_begin},#{date_end},#{sort})
	</insert>
	<delete id="DelStea" parameterType="java.util.Map">
		delete from dec_teach_exp where declaration_id = #{declaration_id}
	</delete>
	<!-- //作家学术 -->
	<select id="queryZjxs" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_acade where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertZjxs" parameterType="java.util.Map">
		insert into dec_acade(declaration_id,org_name,rank,position,note,sort)
		  values(#{declaration_id},#{org_name},#{rank},#{position},#{note},#{sort})
	</insert>
	<delete id="DelZjxs" parameterType="java.util.Map">
		delete from dec_acade where declaration_id = #{declaration_id}
	</delete>
	<!--上版教材编辑-->
	<select id="queryJcbj" resultType="java.util.Map" parameterType="java.util.Map">
		select id,declaration_id,material_name,position,is_digital_editor*1 is_digital_editor,note,sort from dec_last_position where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertJcbj" parameterType="java.util.Map">
		insert into dec_last_position(declaration_id,material_name,position,is_digital_editor,note,sort)
		  values(#{declaration_id},#{material_name},#{position},#{is_digital_editor},#{note},#{sort})
	</insert>
	<delete id="DelJcbj" parameterType="java.util.Map">
		delete from dec_last_position where declaration_id = #{declaration_id}
	</delete>
	<!-- 精品课程建设 -->
	<select id="queryGjkcjs" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_course_construction where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertGjkcjs" parameterType="java.util.Map">
		insert into dec_course_construction(declaration_id,course_name,class_hour,type,note,sort)
		  values(#{declaration_id},#{course_name},#{class_hour},#{type},#{note},#{sort})
	</insert>
	<delete id="DelGjkcjs" parameterType="java.util.Map">
		delete from dec_course_construction where declaration_id = #{declaration_id}
	</delete>
	<!-- 作家主编国家级规划教材情况 -->
	<select id="queryGjghjc" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_national_plan where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertGjghjc" parameterType="java.util.Map">
		insert into dec_national_plan(declaration_id,material_name,isbn,rank,note,sort)
		  values(#{declaration_id},#{material_name},#{isbn},#{rank},#{note},#{sort})
	</insert>
	<delete id="DelGjghjc" parameterType="java.util.Map">
		delete from dec_national_plan where declaration_id = #{declaration_id}
	</delete>
	<!-- 人卫社教材编写情况 -->
	<select id="queryRwsjc" resultType="java.util.Map" parameterType="java.util.Map">
		select id,declaration_id,material_name,rank,position,
		is_digital_editor*1 is_digital_editor,publish_date,isbn,note,sort
		 from dec_textbook_pmph where declaration_id = #{declaration_id}
		  ORDER BY sort 
	</select>
	<insert id="insertRwsjc" parameterType="java.util.Map">
		insert into dec_textbook_pmph(declaration_id,material_name,rank,position,publish_date,isbn,note,is_digital_editor,sort)
		  values(#{declaration_id},#{material_name},#{rank},#{position},#{publish_date},#{isbn},#{note},#{is_digital_editor},#{sort})
	</insert>
	<delete id="DelRwsjc" parameterType="java.util.Map">
		delete from dec_textbook_pmph where declaration_id = #{declaration_id}
	</delete>
	<!-- 其他社教材编写情况 -->
	<select id="queryJcbx" resultType="java.util.Map" parameterType="java.util.Map">
		select id,declaration_id,material_name,rank,position,
		is_digital_editor*1 is_digital_editor,publisher,publish_date,isbn,note,sort
		 from dec_textbook where declaration_id = #{declaration_id}
		  ORDER BY sort 
	</select>
	<insert id="insertJcbx" parameterType="java.util.Map">
		insert into dec_textbook(declaration_id,material_name,rank,position,publisher,publish_date,isbn,note,is_digital_editor,sort)
		  values(#{declaration_id},#{material_name},#{rank},#{position},#{publisher},#{publish_date},#{isbn},#{note},#{is_digital_editor},#{sort})
	</insert>
	<delete id="DelJcbx" parameterType="java.util.Map">
		delete from dec_textbook where declaration_id = #{declaration_id}
	</delete>
	<!-- //作家科研情况表 -->
	<select id="queryZjkyqk" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_research where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertZjkyqk" parameterType="java.util.Map">
		insert into dec_research(declaration_id,research_name,approval_unit,award,note,sort)
		  values(#{declaration_id},#{research_name},#{approval_unit},#{award},#{note},#{sort})
	</insert>
	<delete id="DelZjkyqk" parameterType="java.util.Map">
		delete from dec_research where declaration_id = #{declaration_id}
	</delete>
	<!-- 作家扩展项填报表 -->
	<select id="queryZjkzbb" resultType="java.util.Map" parameterType="java.util.Map">
		select t1.*,t2.extension_name,t2.is_required from dec_extension t1 LEFT JOIN material_extension t2 ON 
		   t1.extension_id = t2.id where t1.declaration_id = #{declaration_id}
	</select>
	<!-- 作家扩展项填报表新增 -->
	<insert id="insertZjkzbb" parameterType="java.util.Map">
		insert into dec_extension(extension_id,declaration_id,content) values(#{extension_id},#{declaration_id},#{content})
	</insert>
	<delete id="delZjkzbb" parameterType="java.util.Map">
		delete from dec_extension where declaration_id = #{declaration_id}
	</delete>
	
	<!-- //个人成就 -->
	<select id="queryAchievement" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_achievement where declaration_id = #{declaration_id}  
	</select>
	<insert id="insertAchievement" parameterType="java.util.Map">
		insert into dec_achievement(declaration_id,content)
		  values(#{declaration_id},#{content})
	</insert>
	<update id="updateAchievement" parameterType="java.util.Map">
		update dec_achievement set content = #{content} 
			where declaration_id = #{declaration_id}
	</update>
	<delete id="DelAchievement" parameterType="java.util.Map">
		delete from dec_achievement where declaration_id = #{declaration_id}
	</delete>
	<!-- //主编学术专著情况 -->
	<select id="queryMonograph" resultType="java.util.Map" parameterType="java.util.Map">
		select id,declaration_id,monograph_name,is_self_paid*1 is_self_paid,publisher,publish_date,note,sort from dec_monograph where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertMonograph" parameterType="java.util.Map">
		insert into dec_monograph(declaration_id,monograph_name,is_self_paid,publisher,publish_date,note,sort)
		  values(#{declaration_id},#{monograph_name},#{is_self_paid},#{publisher},#{publish_date},#{note},#{sort})
	</insert>
	<delete id="DelMonograph" parameterType="java.util.Map">
		delete from dec_monograph where declaration_id = #{declaration_id}
	</delete>
	<!-- //出版行业获奖情况 -->
	<select id="queryPublish" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_publish_reward where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertPublish" parameterType="java.util.Map">
		insert into dec_publish_reward(declaration_id,reward_name,award_unit,reward_date,note,sort)
		  values(#{declaration_id},#{reward_name},#{award_unit},#{reward_date},#{note},#{sort})
	</insert>
	<delete id="DelPublish" parameterType="java.util.Map">
		delete from dec_publish_reward where declaration_id = #{declaration_id}
	</delete>
	<!-- //SCI论文投稿及影响因子 -->
	<select id="querySci" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_sci where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertSci" parameterType="java.util.Map">
		insert into dec_sci(declaration_id,paper_name,journal_name,factor,publish_date,note,sort)
		  values(#{declaration_id},#{paper_name},#{journal_name},#{factor},#{publish_date},#{note},#{sort})
	</insert>
	<delete id="DelSci" parameterType="java.util.Map">
		delete from dec_sci where declaration_id = #{declaration_id}
	</delete>
	<!-- //临床医学获奖情况 -->
	<select id="queryClinicalreward" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_clinical_reward where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertClinicalreward" parameterType="java.util.Map">
		insert into dec_clinical_reward(declaration_id,reward_name,award_unit,reward_date,note,sort)
		  values(#{declaration_id},#{reward_name},#{award_unit},#{reward_date},#{note},#{sort})
	</insert>
	<delete id="DelClinicalreward" parameterType="java.util.Map">
		delete from dec_clinical_reward where declaration_id = #{declaration_id}
	</delete>
	<!-- //学术荣誉授予情况 -->
	<select id="queryAcadereward" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_acade_reward where declaration_id = #{declaration_id} ORDER BY sort 
	</select>
	<insert id="insertAcadereward" parameterType="java.util.Map">
		insert into dec_acade_reward(declaration_id,reward_name,award_unit,reward_date,note,sort)
		  values(#{declaration_id},#{reward_name},#{award_unit},#{reward_date},#{note},#{sort})
	</insert>
	<delete id="DelAcadereward" parameterType="java.util.Map">
		delete from dec_acade_reward where declaration_id = #{declaration_id}
	</delete>
	<!-- //人卫慕课、数字教材编写情况 -->
	<select id="queryMoocdigital" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_mooc_digital where declaration_id = #{declaration_id} 
	</select>
	<insert id="insertMoocdigital" parameterType="java.util.Map">
		insert into dec_mooc_digital(declaration_id,content)
		  values(#{declaration_id},#{content})
	</insert>
	<update id="updateMoocdigital" parameterType="java.util.Map">
		update dec_mooc_digital set content=#{content} where declaration_id = #{declaration_id}
	</update>
	<!-- //内容意向表情况 -->
	<select id="queryIntention" resultType="java.util.Map" parameterType="java.util.Map">
		select * from dec_intention where declaration_id = #{declaration_id} 
	</select>
	<insert id="insertIntention" parameterType="java.util.Map">
		insert into dec_intention(declaration_id,content)
		  values(#{declaration_id},#{content})
	</insert>
	<update id="updateIntention" parameterType="java.util.Map">
		update dec_intention set content=#{content} where declaration_id = #{declaration_id}
	</update>
	<!-- 申报审核 -->
	<update id="updateDeclaration" parameterType="java.util.Map">
		update declaration set auth_user_id =#{auth_user_id} ,auth_date=#{auth_date} ,online_progress=#{online_progress} where id= #{declaration_id}
	</update>
	
	<!-- 查询机构列表 -->
	<select id="queryOrgList" parameterType="PageParameter" resultType="java.util.Map">
		select * from (
			select t1.material_id,t1.org_id,t2.org_name,t2.sort from material_org t1 LEFT JOIN org t2 on t1.org_id = t2.id where 1=1
			<if test="parameter.material_id != null and parameter.material_id != ''">
				and t1.material_id = #{parameter.material_id}
			</if>
			UNION select '' material_id,'0' org_id,'人民卫生出版社' org_name,'0' sort from dual
		)t 
		<if test="parameter.org_name != null and parameter.org_name != ''">
			where t.org_name like #{parameter.org_name}
			</if>
		 order by sort asc limit #{start},#{pageSize}
	</select>
	<!-- 机构数据总数 -->
	<select id="queryOrgCount" parameterType="PageParameter" resultType="int">
		select count(*) from (
			select t1.material_id,t1.org_id,t2.org_name,t2.sort from material_org t1 LEFT JOIN org t2 on t1.org_id = t2.id where 1=1
			<if test="parameter.material_id != null and parameter.material_id != ''">
				and t1.material_id = #{parameter.material_id}
			</if>
			UNION select '' material_id,'0' org_id,'人民卫生出版社' org_name,'0' sort from dual
		)t
			<if test="parameter.org_name != null and parameter.org_name != ''">
				where t.org_name like #{parameter.org_name}
			</if>
	</select>
	
	<!-- 更新个人资料 -->
	<update id="updateWriter" parameterType="java.util.Map" >
		UPDATE writer_user
		<set>
			<if test="username != null and username!=''">
				username = #{username},
			</if>
			<if test="password != null and password!='' ">
				password = #{password},
			</if>
			<if test=" isDisabled!= null ">
				is_disabled= #{isDisabled},
			</if>
			<if test="orgId != null and  orgId!=''">
				org_id = #{orgId},
			</if>
			<if test=" nickname!= null and nickname !=''">
				nickname= #{nickname},
			</if>
			<if test=" realname!= null and realname !=''">
				realname= #{realname},
			</if>
			<if test=" sex!= null and  sex!=''">
				sex= #{sex},
			</if>
			<if test=" birthday!= null">
				birthday= #{birthday},
			</if>
			<if test=" experience!= null and  experience!=''">
				experience = #{experience},
			</if>
			<if test=" position!= null and  position!=''">
				position= #{position},
			</if>
			<if test=" title!= null and title !=''">
				title= #{title},
			</if>
			<if test=" fax!= null and  fax!=''">
				fax= #{fax},
			</if>
			<if test=" handphone!= null and handphone !=''">
				handphone = #{handphone},
			</if>
			<if test=" telephone!= null and  telephone!=''">
				telephone = #{telephone},
			</if>
			<if test=" idcard!= null and idcard !=''">
				idcard= #{idcard},
			</if>
			<if test=" email!= null and email !=''">
				email= #{email},
			</if>
			<if test=" address!= null and  address!=''">
				address= #{address},
			</if>
			<if test=" postcode!= null and  postcode!=''">
				postcode = #{postcode},
			</if>
			<if test=" rank!= null and  rank!=''">
				rank = #{rank},
			</if>
			<if test=" isTeacher!= null ">
				is_teacher= #{isTeacher},
			</if>
			<if test=" cert!= null and  cert!=''">
				cert = #{cert},
			</if>
			<if test=" authTime!= null">
				auth_time = #{authTime},
			</if>
			<if test=" authUserType!= null and  authUserType!=''">
				auth_user_type= #{authUserType},
			</if>
			<if test=" authUserId!= null and  authUserId!=''">
				auth_user_id= #{authUserId},
			</if>
			<if test=" isWriter!= null ">
				is_writer= #{isWriter},
			</if>
			<if test=" isExpert!= null ">
				is_expert = #{isExpert},
			</if>
			<if test=" avatar!= null and  avatar!=''">
				avatar= #{avatar},
			</if>
			<if test=" signature!=null and signature!=''">
				signature = #{signature},
			</if>
			<if test=" note!= null and  note!=''">
				note = #{note},
			</if>
			<if test=" sort!= null and  sort!=''">
				sort = #{sort},
			</if>
			<if test=" isDeleted!= null">
				is_deleted= #{isDeleted},
			</if>
		</set>
		WHERE
		id = #{user_id}
	</update>
</mapper>