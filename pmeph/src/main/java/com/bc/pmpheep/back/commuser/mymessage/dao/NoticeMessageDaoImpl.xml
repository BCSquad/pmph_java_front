<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.pmpheep.back.commuser.mymessage.dao.NoticeMessageDao">
<resultMap type="java.util.Map" id="messageMap"></resultMap>

	<select id="getMessageList" resultMap="messageMap">
	     select * from user_message 
	</select>
	
	 <!-- 申请消息列表 -->
	<select id="selectApplyMessage" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT a.id,a.status,a.gmt_create,b.realname,b.avatar 
		FROM writer_friend a
		LEFT JOIN writer_user b
		ON a.request_id = b.id
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			a.target_id = #{userId}
			<if test="condition==null">AND status in(0,1,2)</if>
			<if test="condition==3">AND status in(0,1,2)</if>
			<if test="condition==1">AND status in(1,2)</if>
			<if test="condition==2">AND status = 0</if>
		</trim>
		ORDER BY a.gmt_create DESC
		<if test="startPara!=null">limit #{startPara},8</if>	
	</select>
	
	<!-- 查询系统消息总量 -->
	<select id="selectSysMessageTotalCount" parameterType="map" resultType="int">
		SELECT count(*)
		FROM writer_friend a
		LEFT JOIN writer_user b
		ON a.request_id = b.id
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			a.target_id = #{userId}
			<if test="condition==null">AND status in(0,1,2)</if>
			<if test="condition==3">AND status in(0,1,2)</if>
			<if test="condition==1">AND status in(1,2)</if>
			<if test="condition==2">AND status = 0</if>
		</trim>
	</select>
	
	<!-- 更新申请消息表 -->
	<update id="updateApplyMessage" parameterType="java.util.Map">
		update writer_friend set 
		<if test="flag==1">status='1'</if>
		<if test="flag==2">status='2'</if>
		where id=#{applyId}
	</update>
	
	<!-- 消息通知列表 -->
	<select id="selectNoticeMessage" parameterType="java.util.Map" resultType="java.util.Map">
		
		<!-- 全部 -->
		<if test="condition==null||condition==3">
			select * from(
			select u.id,u.msg_id as fId,u.title,u.gmt_create as time,u.msg_type as msgType,o.avatar,u.gmt_update as deadline ,0 as is_material_entry,u.is_read
			from user_message u
			LEFT JOIN pmph_user o
			ON o.id= u.sender_id
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				u.receiver_id = #{userId}
				and msg_type in (0,1)
				and u.is_deleted = 0
			</trim>
			ORDER BY u.gmt_create DESC)t1
			UNION
			select * from(
				SELECT n.id,n.material_id,n.material_name,n.gmt_create,4,n.avatar,n.deadline,n.is_material_entry,0
				FROM 
				(SELECT 
		        t.*,b.material_name,p.avatar,b.deadline
		        FROM cms_content t
		        LEFT JOIN  material b ON t.material_id =b.id 
		        LEFT JOIN pmph_user p ON t.author_id= p.id
		        WHERE  t.category_id=3 
		        AND t.material_id IS NOT NULL 
		        AND t.material_id >0
                <![CDATA[AND b.is_public <> 0]]>
		        AND t.auth_status=2
		        AND t.is_deleted=0
		        AND t.is_published=1
			    UNION
			    SELECT 
				t.*,b.material_name,m.avatar,b.deadline
		        FROM cms_content t
		        LEFT JOIN  material b ON t.material_id =b.id 
		        LEFT JOIN material_org u ON b.id=u.material_id
		        LEFT JOIN writer_user p ON p.org_id=u.org_id
		        LEFT JOIN pmph_user m ON t.author_id= m.id
		        WHERE  t.category_id=3
		        AND t.material_id IS NOT NULL 
		        AND t.material_id >0
		        AND b.is_public = 0
		        AND t.auth_status=2
		        AND t.is_deleted=0 
		        AND t.is_published=1
		        AND p.id=#{userId}) n
			)t2
			order by time desc 
		</if>
		
		<!-- 公告 -->
		<if test="condition==4">
				SELECT n.id,n.material_id as fId,n.material_name as title,n.gmt_create as time,4 as msgType,n.avatar,n.deadline,n.is_material_entry
				FROM 
				(SELECT 
		        t.*,b.material_name,p.avatar,b.deadline
		        FROM cms_content t
		        LEFT JOIN  material b ON t.material_id =b.id 
		        LEFT JOIN pmph_user p ON t.author_id= p.id
		        WHERE  t.category_id=3 
		        AND t.material_id IS NOT NULL 
		        AND t.material_id >0
                <![CDATA[AND b.is_public <> 0]]>
		        AND t.auth_status=2
		        AND t.is_deleted=0
		        AND t.is_published=1
			    UNION
			    SELECT 
				t.*,b.material_name,m.avatar,b.deadline
		        FROM cms_content t
		        LEFT JOIN  material b ON t.material_id =b.id 
		        LEFT JOIN material_org u ON b.id=u.material_id
		        LEFT JOIN writer_user p ON p.org_id=u.org_id
		        LEFT JOIN pmph_user m ON t.author_id= m.id
		        WHERE  t.category_id=3
		        AND t.material_id IS NOT NULL 
		        AND t.material_id >0
		        AND b.is_public = 0
		        AND t.auth_status=2
		        AND t.is_deleted=0 
		        AND t.is_published=1
		        AND p.id=#{userId}) n
			ORDER BY n.gmt_create DESC
		</if>
		<!-- 系统消息 -->
		<if test="condition==0">
			select u.id,u.is_read*1 is_read,u.msg_id as fId,u.title,u.gmt_create as time,u.msg_type as msgType,o.avatar,o.realname
			from user_message u
			LEFT JOIN pmph_user o
			ON o.id= u.sender_id
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				u.receiver_id = #{userId}
				and msg_type in (0,1)
				and u.is_deleted = 0
			</trim>
			ORDER BY u.gmt_create DESC
		</if>
		
		
		<if test="startPara!=null">limit #{startPara},8</if>	
		
	</select>
	<!-- 系统消息总量 -->
	<select id="selectNoticeMessageSysCount" parameterType="java.util.Map" resultType="int">
			select count(*) from(
			select u.id
			from user_message u
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				u.receiver_id = #{userId}
				and msg_type in (0,1)
				and u.is_deleted = 0
			</trim>
			)t
	</select>
	<!-- 系统公告消息总量 -->
	<select id="selectNoticeMessageCount" parameterType="java.util.Map" resultType="int">
			SELECT COUNT(*) FROM(
				SELECT n.id,n.material_id,n.title,n.gmt_create,4
				FROM 
				(SELECT 
		        t.*
		        FROM cms_content t
		        LEFT JOIN  material b ON t.material_id =b.id 
		        WHERE  t.category_id=3 
		        AND t.material_id IS NOT NULL 
		        AND t.material_id >0
                <![CDATA[AND b.is_public <> 0]]>
		        AND t.auth_status=2
		        AND t.is_deleted=0
		        AND t.is_published=1
			    UNION
			    SELECT 
				t.*
		        FROM cms_content t
		        LEFT JOIN  material b ON t.material_id =b.id 
		        LEFT JOIN material_org u ON b.id=u.material_id
		        LEFT JOIN writer_user p ON p.org_id=u.org_id
		        WHERE  t.category_id=3
		        AND t.material_id IS NOT NULL 
		        AND t.material_id >0
		        AND b.is_public = 0
		        AND t.auth_status=2
		        AND t.is_deleted=0
		        AND t.is_published=1 
		        AND p.id=#{userId}) n
		        )t
	</select>
	
	<!-- 删除通知 -->
	<delete id="deleteNoticeMessage" parameterType="java.util.Map">
		update user_message set is_deleted=1 where id = #{noticeId}
	</delete>
	
	<!-- 获取机构用户id和作家用户id -->
	<select id="findOrgUserAndWriterUser" parameterType="java.lang.String" resultType="java.util.Map">
		select a.id as receiver_id,'orgUserId' as type from org_user a,org_user b where a.org_id = b.org_id and a.id=#{userId}
		union all
		select d.id as receiver_id, 'writerUserId' as type from org_user c join writer_user d on c.org_id = d.org_id where c.id= #{userId}
	</select>
	
	<!-- 批量插入消息 -->
	<insert id="batchInsertMessage" parameterType="java.util.List">
	INSERT INTO user_message (msg_id,msg_type,title,sender_id,sender_type,receiver_id,receiver_type)  
    VALUES   
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.msg_id},#{item.msg_type},#{item.title},#{item.sender_id},#{item.sender_type},#{item.receiver_id},#{item.receiver_type})  
    </foreach>  
	</insert>
	
	<insert id="insertAttachmentInfo" parameterType="java.util.Map">
		insert into message_attachment(msg_id,attachment,attachment_name)
		values(#{msg_id},#{attachment},#{attachment_name})
	</insert>
	
	<!-- 教材申报通知详情 -->
	<select id="noticeMessageDetail" parameterType="java.util.Map" resultType="java.util.Map">
		<!-- SELECT  a.title,m.`deadline`,m.`mail_address`,e.`note`,e.notice,e.id AS attachmentId,a.mid as mongoId,ce.id as ceid,ce.attachment,ce.attachment_name
		FROM cms_content a
		LEFT JOIN material m
		ON a.`material_id` = m.`id`
		LEFT JOIN material_extra e
		ON m.`id` = e.`material_id`
		LEFT JOIN cms_extra ce ON ce.content_id=a.id
		WHERE a.`id`=#{cmsId} -->
		
		SELECT  a.title,m.`deadline`,m.`mail_address`,m.is_force_end,m.is_all_textbook_published,a.mid as mongoId,m.deadline,m.actual_deadline, a.is_material_entry,a.material_id,e.`note`,e.notice,e.id AS attachmentId
		,
		(case when  date_format(CONCAT(date_format(m.actual_deadline, '%Y%m%d'),'235959'),'%Y-%m-%d %H:%i:%s')>NOW() then 'no' else 'yes' end) as ended
		<if test="userid != null and userid != '' ">
	     ,(select case when count(d.id) &gt;0 then 'yes' else 'no' end  from declaration  d where d.material_id=a.`material_id` and d.user_id=#{userid})as isapply
	    </if>
		FROM cms_content a
		LEFT JOIN material m
		ON a.`material_id` = m.`id`
		LEFT JOIN material_extra e
		ON m.`id` = e.`material_id`
		WHERE a.`id`=#{cmsId}
	</select>
	
	<!-- 查询教材备注相关的附件 -->
	<select id="queryNoticeMessageDetailAttachment" parameterType="java.util.Map" resultType="java.util.Map">
		<!-- select * from `material_note_attachment` where material_extra_id = #{attachmentId} -->
		select * from `material_note_attachment` where material_extra_id in(
		   select me.id from material_extra me left join  material m on m.id=me.material_id where m.id=#{materialId}
		)
	</select>
	
	<!-- 查询教材相关的联系人 -->
	<select id="queryNoticeMessageDetailContact" parameterType="java.util.Map" resultType="java.util.Map">
		select * from material_contact where material_id = #{materialId}
	</select>
    
    
    <!-- 查询遴选公告的内容id的查询公告详情 -->
	<select id="queryCMSNotice" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT DISTINCT m.`material_name`,m.`id` AS materialId ,m.`deadline`,m.`mail_address`,e.`note`,e.id AS attachmentId
		FROM
		   cms_content a LEFT JOIN material m ON a.`material_id` = m.`id`
		   LEFT JOIN material_extra e  ON m.`id` = e.`material_id`
		   LEFT JOIN `material_contact` c  ON c.`material_id` = m.`id`
		WHERE a.mid=#{messageId}
	</select>
	
	<!-- 更新通知点击量 -->
	<update id="updateNoticeClicks" parameterType="String" >
		UPDATE `cms_content` SET clicks = clicks+1 WHERE id=#{cmsId}
	</update>
	
	<!--查询公告的附件  -->
	<select id="queryCMSAttach" parameterType="java.util.Map" resultType="java.util.Map">
	    select * from  cms_extra ce left join  cms_content c on c.id=ce.content_id  where c.id=#{cmsId}
	</select>
	
	
			
	    <!-- 系统消息标题弹框回显-->
	<select id="queryTitleMessage" parameterType="java.util.Map" resultType="java.util.Map">
			select u.id ,u.msg_id ,u.title,u.msg_type, IFNULL(o.realname,o.username)as realname,u.gmt_create
			from user_message u
			LEFT JOIN pmph_user o
			ON o.id= u.sender_id  where u.id=#{id}
	</select>
		<!--查询统消息标题弹框回显的附件  -->
	<select id="queryTitleMessageAttach" parameterType="java.util.Map" resultType="java.util.Map">
	    select * from  message_attachment ma  where ma.msg_id=#{msg_id}
	</select>
	
	
		<!-- 点击标题后状态变为已读 -->
	<update id="updateTitleMessage" parameterType="String" >
		UPDATE `user_message` SET is_read =1 WHERE id=#{id}
	</update>
</mapper>