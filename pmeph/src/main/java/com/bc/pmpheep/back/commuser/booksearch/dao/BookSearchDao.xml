<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.pmpheep.back.commuser.booksearch.dao.BookSearchDao">
	
	<resultMap type="java.util.Map" id="bookListMap">
		
	</resultMap>
	
	<!-- 查询书籍列表 带出当前登录人与每本书籍的点赞记录id -->
	<select id="queryBookList" parameterType="PageParameter" resultMap="bookListMap">
		SELECT
			b.id as bookId,
			b.bookname,
			b.author,
			b.publisher,
			b.image_url,
			b.clicks,
			b.comments,
			b.likes,
			bd.detail,
			l.id as likeId
		FROM
		book AS b
		left Join book_detail AS bd ON b.id = bd.book_id
		left join book_user_like as l on b.id= l.book_id 
		<choose>
			<when test="parameter.uid != null and parameter.uid != '' ">
				and  l.writer_id = ${parameter.uid}
			</when>
			<otherwise>
				and  1=2
			</otherwise>
		</choose>
		<where>
			b.is_on_sale=1
			<if test="parameter.queryName != null and parameter.queryName != '' ">
				and 
				(
				b.bookname like concat("%",#{parameter.queryName},"%")
				or b.isbn like concat("%",#{parameter.queryName},"%")
				or b.publisher like concat("%",#{parameter.queryName},"%")
				or b.author like concat("%",#{parameter.queryName},"%")
				)
			</if>
		</where>
		group by b.id
		limit ${start},${pageSize}
	</select>
	
	<!-- 书籍总数 -->
	<select id="queryBookCount" parameterType="PageParameter" resultType="java.lang.Integer">
		SELECT
			count(b.id)
		FROM
		book AS b
		<where>
			b.is_on_sale=1
			<if test="parameter.queryName != null and parameter.queryName != '' ">
				and 
				(
				b.bookname like concat("%",#{parameter.queryName},"%")
				or b.isbn like concat("%",#{parameter.queryName},"%")
				or b.publisher like concat("%",#{parameter.queryName},"%")
				or b.author like concat("%",#{parameter.queryName},"%")
				)
			</if>
		</where>
	</select>
	
	<update id="statusModify" parameterType="java.util.Map">
		update writer_user_certification set progress = ${status} 
		where id = ${id}
	</update>
	
	<delete id="UserDontLikeTheBook" parameterType="java.util.Map">
		delete from book_user_like 
		where book_id = ${bookId} and writer_id = ${uid}
	</delete>
	
	<insert id="UserLikeTheBook" parameterType="java.util.Map">
		insert into book_user_like 
			(book_id,writer_id)
		value(${bookId},${uid})
	</insert>
	
	<update id="increaseOneLike" parameterType="java.lang.String">
		update book set likes = likes+1 where id = #{bookId}
	</update>
	
	<update id="decreaseOneLike" parameterType="java.lang.String">
		update book set likes = likes-1 where id = #{bookId} and <![CDATA[likes > 0]]>
	</update>
	
	<select id="queryBookLikeById" parameterType="java.lang.String" resultType="java.lang.Integer">
		select likes from book where id = #{bookId}
	</select>
	<!-- 查询某一类型下的子类型 -->
	<select id="queryChildSort" parameterType="map" resultMap="bookListMap">
	   select * from material_type where parent_id=${parentId};
	</select>
	<select id="querySortById" parameterType="map" resultMap="bookListMap">
	   select * from material_type where id=#{id}
	</select>
	
	<!-- 分页查询 -->
	<select id="listBook" parameterType="PageParameter"
		resultMap="bookListMap">
		SELECT 
			b.id as bookId,
			b.isbn,
			b.`bookname`,b.`author`,
			b.`publisher`,bd.`detail`,
  			b.`clicks`,b.`comments`,
  			b.`likes`,b.`bookmarks`,
  			b.image_url,
  			<if test="parameter.type !=null and parameter.type !=''">
  			t.type_name, 
  			t.path ,
  			</if>
  			l.id as likeId  			
		FROM 
			`book` b 
		left join book_user_like as l 
		ON b.id= l.book_id  
		
		<choose>
			<when test="parameter.logUserId != null and parameter.logUserId != '' ">
				and l.writer_id = ${parameter.logUserId}
			</when>
			<otherwise>
				and 1=2
			</otherwise>
		</choose>

		LEFT JOIN 
			`book_detail` bd 
		ON 
			b.`id`= bd.`book_id`
		
		<if test="parameter.type !=null and parameter.type !=''">
		INNER JOIN 
			`material_type` t
		ON
			t.`id` = b.`type`
			
			and
			(
				SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(t.path,'-',t.id),'-',
										(select 
											cast(
													(CHAR_LENGTH(path)-CHAR_LENGTH(REPLACE(path,'-','')))/CHAR_LENGTH('-')+2
														as decimal(9,2)
											)
											 from material_type 
											where id = cast(#{parameter.type} as decimal(9,2)))
								),'-',-1) = #{parameter.type}
				or t.id = 	#{parameter.type}		
			)
			</if>				
		WHERE 
			b.is_on_sale=1
			
			<if test="parameter.searchTextArray != null ">
				<foreach collection="parameter.searchTextArray" open=" and( "  close=")" separator=" and "  item="searchText">
					(
					b.bookname like concat('%',#{searchText},'%')
					or b.isbn like concat('%',#{searchText},'%')
					or b.publisher like concat('%',#{searchText},'%')
					or b.author like concat('%',#{searchText},'%')
					)
				</foreach>
			</if>
			<!-- <if test="parameter.searchText != null and parameter.searchText != '' ">
				and 
				(
				b.bookname like #{parameter.searchText}
				or b.isbn like #{parameter.searchText}
				or b.publisher like #{parameter.searchText}
				or b.author like #{parameter.searchText}
				)
			</if> -->
		LIMIT #{start},#{pageSize}
	</select>
	
	<!-- 查询总数 -->
	<select id="getBookTotal" parameterType="PageParameter"
		resultType="Integer">
		SELECT COUNT(*) FROM
		(
			SELECT 
				b.id,b.bookname
			FROM 
				`book` b 
			left join book_user_like as l 
			on b.id= l.book_id 
			
			<choose>
				<when test="parameter.logUserId != null and parameter.logUserId != '' ">
					and l.writer_id = ${parameter.logUserId}
				</when>
				<otherwise>
					and 1=2
				</otherwise>
			</choose>
			
			LEFT JOIN 
				`book_detail` bd 
			ON 
				b.`id`= bd.`book_id`
			<if test="parameter.type !=null and parameter.type !=''">
			INNER JOIN 
				`material_type` t
			ON
				t.`id` = b.`type`
				
				and
				(
					SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(t.path,'-',t.id),'-',
											(select 
												cast(
														(CHAR_LENGTH(path)-CHAR_LENGTH(REPLACE(path,'-','')))/CHAR_LENGTH('-')+2
															as decimal(9,2)
												)
												 from material_type 
												where id = cast(#{parameter.type} as decimal(9,2)))
									),'-',-1) = #{parameter.type}
					or t.id = 	#{parameter.type}		
				)
				</if>	
			
			where b.is_on_sale=1
			<if test="parameter.searchTextArray != null ">
				<foreach collection="parameter.searchTextArray" open=" and( "  close=")" separator=" and "  item="searchText">
					(
					b.bookname like concat('%',#{searchText},'%')
					or b.isbn like concat('%',#{searchText},'%')
					or b.publisher like concat('%',#{searchText},'%')
					or b.author like concat('%',#{searchText},'%')
					)
				</foreach>
			</if>
			<!-- <if test="parameter.searchText != null and parameter.searchText != '' ">
				and 
				(
				b.bookname like #{parameter.searchText}
				or b.isbn like #{parameter.searchText}
				or b.publisher like #{parameter.searchText}
				or b.author like #{parameter.searchText}
				)
			</if> -->
			
		)t
		
	</select>
	<select id="querySearchSort" parameterType="map" resultMap="bookListMap">
			SELECT  
				m.* 
			from 
				material_type  m 
			where 
				m.id 
			in 
			   (
				SELECT
				    SUBSTRING_INDEX(SUBSTRING_INDEX(t.path,'-',#{order}),'-',-1)
				FROM
					book b
				JOIN material_type t ON t.id = b.type
				  WHERE 1=1
				  <if test="searchTextArray != null ">
						<foreach collection="searchTextArray" open=" and( "  close=")" separator=" and "  item="searchText">
							(
							b.bookname like concat('%',#{searchText},'%')
							or b.isbn like concat('%',#{searchText},'%')
							or b.publisher like concat('%',#{searchText},'%')
							or b.author like concat('%',#{searchText},'%')
							)
						</foreach>
					</if>
				  <!-- <if test="searchText !=nill">
				     and 
						(
						b.bookname like #{searchText}
						or b.isbn like #{searchText}
						or b.publisher like #{searchText}
						or b.author like #{searchText}
						)
				  </if> -->
				  <if test="sortId !=null" >
				     and m.parent_id=#{sortId}
				  </if>
				 	 group by  SUBSTRING_INDEX(t.path,'-',#{order})	
				)
	</select>
	
	
</mapper>