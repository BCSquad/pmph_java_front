<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.pmpheep.general.dao.UserDao">

    <select id="getUserInfo" resultType="map">
        <if test="usertype == 1">
            select *,
            (select max(operate_date) from sys_operation where operate_text='作家用户登录' and user_name=#{username} GROUP BY user_name) latest_login_time
            from writer_user where username=#{username} and is_disabled=0
        </if>
        <if test="usertype == 2">
            select u.*,o.org_name,
            (select max(operate_date) from sys_operation where operate_text='作家用户登录' and user_name=#{username} GROUP BY user_name) latest_login_time
            from org_user u join org o on u.org_id=o.id where username=#{username}  and is_disabled=0
        </if>
    </select>


    <select id="getPointRules" resultType="map">

        select * from writer_point_rule where is_disabled = 0

    </select>


    <insert id="insertUserLoginLog" parameterType="map">
        insert into sys_operation (user_id,user_name,user_real_name,operate_text,client_ip,business_type,device_type)
        values (#{id},#{username},#{realname},'作家用户登录',#{clientip},'作家用户','PC')
    </insert>

    <select id="getUserNeedAddScores" resultType="map">
       SELECT
	count(1) pp
FROM
	sys_operation o
WHERE
	 o.user_id=#{id} and o.user_name=#{username} and
	o.operate_date >= CURDATE()
UNION
	SELECT
		*
	FROM
		(
			SELECT
				datediff(CURDATE(), t.operate_date) pp
			FROM
				sys_operation t
			WHERE
				t.business_type = '作家用户'
			AND t.operate_date &gt; date_add(CURDATE(), INTERVAL - (
			SELECT cast(m1.p1 / m2.p2 AS DECIMAL(9, 2)) - 1
FROM
	(
		SELECT
			t1.point p1
		FROM
			writer_point_rule t1
		WHERE
			t1.rule_code = 'max_login_integral'
	) m1,
	(
		SELECT
			t2.point p2
		FROM
			writer_point_rule t2
		WHERE
			t2.rule_code = 'logins'
	) m2
	) DAY)
			AND t.operate_date &lt; CURDATE()  and t.user_id=#{id} and t.user_name=#{username}
			GROUP BY
				datediff(CURDATE(), t.operate_date)
			ORDER BY
				datediff(CURDATE(), t.operate_date)
		) t
    </select>

    <insert id="insertUserScore" parameterType="map">
        update writer_point set total=total+#{scores},gain=gain+#{scores} where user_id=#{id};
        insert into writer_point_log (user_id,rule_id,point) values (#{id},#{ruleid},#{scores});
    </insert>


</mapper>